import * as React from 'react';
import { SizeType } from 'types';
import { SelectMode, ValueMode, OptionsMode, Option, OptionValue } from '../interfaces';
export interface SelectProps extends Omit<Omit<Omit<React.HTMLAttributes<HTMLDivElement>, 'prefix'>, 'onChange'>, 'onSelect'> {
    mode?: SelectMode;
    optionsMode?: OptionsMode;
    valueMode?: ValueMode;
    className?: string;
    size?: SizeType;
    label?: React.ReactNode;
    placeholder?: string;
    newPlaceholder?: string;
    loading?: boolean;
    disabled?: boolean;
    options?: Option[];
    emptyLabel?: string;
    prefix?: React.ReactNode;
    suffix?: React.ReactNode;
    rootRef?: React.MutableRefObject<HTMLDivElement | null>;
    value?: OptionValue | OptionValue[];
    selected?: Option | Option[];
    isClearable?: boolean;
    onChange?: (value: OptionValue | OptionValue[]) => void;
    onSelect?: (value: Option[]) => void;
    onSearch?: (value: string) => void;
    onAddNew?: (value: string) => void;
}
declare const Select: React.FC<SelectProps>;
export { Select };
