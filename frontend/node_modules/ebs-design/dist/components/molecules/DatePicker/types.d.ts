/// <reference types="react" />
import ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker';
import { SizeType } from 'types';
declare type Modify<T, R> = Omit<T, keyof R> & R;
export declare type DateType = Date | [Date, Date] | string | null;
export declare type DateValueType = Date | null | undefined;
export declare type DatePickerProps = Modify<ReactDatePickerProps, {
    size?: SizeType;
    value?: any;
    onChange?: (date: DateType, event?: React.SyntheticEvent<HTMLDivElement>) => void;
}>;
export declare type RangePickerProps = {
    style?: React.CSSProperties;
    startProps?: DatePickerProps;
    endProps?: DatePickerProps;
} & DatePickerProps;
export interface DatePickerComposition extends React.ForwardRefExoticComponent<DatePickerProps & React.RefAttributes<ReactDatePicker>> {
    Range: React.ForwardRefExoticComponent<RangePickerProps & React.RefAttributes<ReactDatePicker>>;
    RangeInput: React.ForwardRefExoticComponent<DatePickerProps & React.RefAttributes<ReactDatePicker>>;
}
export {};
