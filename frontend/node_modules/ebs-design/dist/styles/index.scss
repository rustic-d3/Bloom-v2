@use 'sass:math';
@use 'sass:map';
@use 'sass:list';

/*** IMPORTED FILE NOT FOUND ***/
@import 'sass-rem';/*** --- ***/

// Utilities
/* Document
 * ========================================================================== */

/**
 * 1. Add border box sizing in all browsers (opinionated).
 * 2. Backgrounds do not repeat by default (opinionated).
 */

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  background-repeat: no-repeat; /* 2 */
}

/**
  * 1. Add text decoration inheritance in all browsers (opinionated).
  * 2. Add vertical alignment inheritance in all browsers (opinionated).
  */

::before,
::after {
  text-decoration: inherit; /* 1 */
  vertical-align: inherit; /* 2 */
}

/**
  * 1. Use the default cursor in all browsers (opinionated).
  * 2. Change the line height in all browsers (opinionated).
  * 3. Breaks words to prevent overflow in all browsers (opinionated).
  * 4. Use a 4-space tab width in all browsers (opinionated).
  * 5. Remove the grey highlight on links in iOS (opinionated).
  * 6. Prevent adjustments of font size after orientation changes in iOS.
  */

:where(:root) {
  cursor: default; /* 1 */
  line-height: 1.5; /* 2 */
  overflow-wrap: break-word; /* 3 */
  -moz-tab-size: 4; /* 4 */
  tab-size: 4; /* 4 */
  -webkit-tap-highlight-color: transparent; /* 5 */
  -webkit-text-size-adjust: 100%; /* 6 */
  text-size-adjust: 100%; /* 6 */
}

/* Sections
  * ========================================================================== */

/**
  * Remove the margin in all browsers (opinionated).
  */

:where(body) {
  margin: 0;
}

/**
  * Correct the font size and margin on `h1` elements within `section` and
  * `article` contexts in Chrome, Edge, Firefox, and Safari.
  */

:where(h1) {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
  * ========================================================================== */

/**
  * Remove the margin on nested lists in Chrome, Edge, and Safari.
  */

:where(dl, ol, ul) :where(dl, ol, ul) {
  margin: 0;
}

/**
  * 1. Correct the inheritance of border color in Firefox.
  * 2. Add the correct box sizing in Firefox.
  */

:where(hr) {
  color: inherit; /* 1 */
  height: 0; /* 2 */
}

/**
  * Remove the list style on navigation lists in all browsers (opinionated).
  */

:where(nav) :where(ol, ul) {
  list-style-type: none;
  padding: 0;
}

/**
  * Prevent VoiceOver from ignoring list semantics in Safari (opinionated).
  */

:where(nav li)::before {
  content: '\200B';
  float: left;
}

/**
  * 1. Correct the inheritance and scaling of font size in all browsers.
  * 2. Correct the odd `em` font sizing in all browsers.
  * 3. Prevent overflow of the container in all browsers (opinionated).
  */

:where(pre) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
  overflow: auto; /* 3 */
}

/* Text-level semantics
  * ========================================================================== */

/**
  * Add the correct text decoration in Safari.
  */

:where(abbr[title]) {
  text-decoration: underline;
  text-decoration: underline dotted;
}

/**
  * Add the correct font weight in Chrome, Edge, and Safari.
  */

:where(b, strong) {
  font-weight: bolder;
}

/**
  * 1. Correct the inheritance and scaling of font size in all browsers.
  * 2. Correct the odd `em` font sizing in all browsers.
  */

:where(code, kbd, samp) {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
  * Add the correct font size in all browsers.
  */

:where(small) {
  font-size: 80%;
}

/* Embedded content
  * ========================================================================== */

/*
  * Change the alignment on media elements in all browsers (opinionated).
  */

:where(audio, canvas, iframe, img, svg, video) {
  vertical-align: middle;
}

/**
  * Remove the border on iframes in all browsers (opinionated).
  */

:where(iframe) {
  border-style: none;
}

/**
  * Change the fill color to match the text color in all browsers (opinionated).
  */

:where(svg:not([fill])) {
  fill: currentColor;
}

/* Tabular data
  * ========================================================================== */

/**
  * 1. Collapse border spacing in all browsers (opinionated).
  * 2. Correct table border color in Chrome, Edge, and Safari.
  * 3. Remove text indentation from table contents in Chrome, Edge, and Safari.
  */

:where(table) {
  border-collapse: collapse; /* 1 */
  border-color: currentColor; /* 2 */
  text-indent: 0; /* 3 */
}

/* Forms
  * ========================================================================== */

/**
  * Remove the margin on controls in Safari.
  */

:where(button, input, select) {
  margin: 0;
}

/**
  * Correct the inability to style buttons in iOS and Safari.
  */

:where(button, [type='button' i], [type='reset' i], [type='submit' i]) {
  -webkit-appearance: button;
}

/**
  * Change the inconsistent appearance in all browsers (opinionated).
  */

:where(fieldset) {
  border: 1px solid #a0a0a0;
}

/**
  * Add the correct vertical alignment in Chrome, Edge, and Firefox.
  */

:where(progress) {
  vertical-align: baseline;
}

/**
  * 1. Remove the margin in Firefox and Safari.
  * 3. Change the resize direction in all browsers (opinionated).
  */

:where(textarea) {
  margin: 0; /* 1 */
  resize: vertical; /* 3 */
}

/**
  * 1. Correct the odd appearance in Chrome, Edge, and Safari.
  * 2. Correct the outline style in Safari.
  */

:where([type='search' i]) {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
  * Correct the cursor style of increment and decrement buttons in Safari.
  */

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
  * Correct the text style of placeholders in Chrome, Edge, and Safari.
  */

::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54;
}

/**
  * Remove the inner padding in Chrome, Edge, and Safari on macOS.
  */

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
  * 1. Correct the inability to style upload buttons in iOS and Safari.
  * 2. Change font properties to `inherit` in Safari.
  */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
  * ========================================================================== */

/*
  * Add the correct styles in Safari.
  */

:where(dialog) {
  background-color: white;
  border: solid;
  color: black;
  height: -moz-fit-content;
  height: fit-content;
  left: 0;
  margin: auto;
  padding: 1em;
  position: absolute;
  right: 0;
  width: -moz-fit-content;
  width: fit-content;
}

:where(dialog:not([open])) {
  display: none;
}

/*
  * Add the correct display in Safari.
  */

:where(details > summary:first-of-type) {
  display: list-item;
}

/* Accessibility
  * ========================================================================== */

/**
  * Change the cursor on busy elements in all browsers (opinionated).
  */

:where([aria-busy='true' i]) {
  cursor: progress;
}

/*
  * Change the cursor on disabled, not-editable, or otherwise
  * inoperable elements in all browsers (opinionated).
  */

:where([aria-disabled='true' i], [disabled]) {
  cursor: not-allowed;
}

/*
  * Change the display on visually hidden accessible elements
  * in all browsers (opinionated).
  */

:where([aria-hidden='false' i][hidden]) {
  display: initial;
}

:where([aria-hidden='false' i][hidden]:not(:focus)) {
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

// Main colors
$primary-color: #3366ff !default;
$success-color: #2ac952 !default;
$info-color: #3bc0f9 !default;
$warning-color: #ffd83d !default;
$danger-color: #ff3a30 !default;
$normal-color: #a5a5a5 !default;

$white: #fff !default;
$black: #000 !default;

// Accent colors
$accent-color-1: #9b1dd9 !default;
$accent-color-2: #fdce14 !default;
$accent-color-3: #24a677 !default;

// Primary colors
$primary-000: #eef5ff !default;
$primary-100: #d6e4ff !default;
$primary-200: #adc8ff !default;
$primary-300: #85a9ff !default;
$primary-400: #6690ff !default;
$primary-500: $primary-color !default; // main one
$primary-600: #254eda !default;
$primary-700: #1a39b6 !default;
$primary-800: #102693 !default;
$primary-900: #0a1a7a !default;

// Grey colors
$grey-50: #fafafa !default;
$grey-100: #f5f5f5 !default;
$grey-200: #e5e5e5 !default;
$grey-300: #d5d5d5 !default;
$grey-400: #c5c5c5 !default;
$grey-500: #a5a5a5 !default;
$grey-600: #888888 !default;
$grey-700: #666666 !default;
$grey-800: #444444 !default;
$grey-900: #222222 !default;

// Semantic colors
$success-100: #d9fcd4 !default;
$success-200: #adf9aa !default;
$success-300: #7dee84 !default;
$success-400: #5ade6e !default;
$success-500: $success-color !default;
$success-600: #1eac50 !default;
$success-700: #15904c !default;
$success-800: #0d7445 !default;
$success-900: #086040 !default;

// semantic info colors
$info-100: #d7fdfe !default;
$info-200: #b0f6fe !default;
$info-300: #89eafd !default;
$info-400: #6bd9fc !default;
$info-500: $info-color !default;
$info-600: #2b97d7 !default;
$info-700: #1d72b3 !default;
$info-800: #11518f !default;
$info-900: #0c3a76 !default;

// semantic warning colors
$warning-100: #fffbd8 !default;
$warning-200: #fff4b2 !default;
$warning-300: #ffed8b !default;
$warning-400: #ffe56e !default;
$warning-500: $warning-color !default;
$warning-600: #dbb42b !default;
$warning-700: #b7921f !default;
$warning-800: #937212 !default;
$warning-900: #7a5b0b !default;

// semantic danger colors
$danger-100: #ffe5d5 !default;
$danger-200: #ffc5ac !default;
$danger-300: #ff9d82 !default;
$danger-400: #ff7863 !default;
$danger-500: $danger-color !default;
$danger-600: #db2329 !default;
$danger-700: #b7182b !default;
$danger-800: #930f2a !default;
$danger-900: #7a0929 !default;

// accent 1 colors
$accent-1-100: #f9d1fd !default;
$accent-1-200: #efa4fb !default;
$accent-1-300: #da74f3 !default;
$accent-1-400: #c051e8 !default;
$accent-1-500: $accent-color-1 !default;
$accent-1-600: #7915ba !default;
$accent-1-700: #5b0e9c !default;
$accent-1-800: #40097d !default;
$accent-1-900: #2e0568 !default;

// accent 2 colors
$accent-2-100: #fef9cf !default;
$accent-2-200: #fef1a0 !default;
$accent-2-300: #fee771 !default;
$accent-2-400: #fdde4e !default;
$accent-2-500: $accent-color-2 !default;
$accent-2-600: #d9ac0e !default;
$accent-2-700: #b68c0a !default;
$accent-2-800: #926d06 !default;
$accent-2-900: #795703 !default;

// accent 3 colors
$accent-3-100: #d3fadc !default;
$accent-3-200: #a9f6c3 !default;
$accent-3-300: #79e4a8 !default;
$accent-3-400: #53c993 !default;
$accent-3-500: $accent-color-3 !default;
$accent-3-600: #1a8e70 !default;
$accent-3-700: #127766 !default;
$accent-3-800: #0b605a !default;
$accent-3-900: #064d4f !default;

:root {
  --primary-000: #{$primary-000};
  --primary-100: #{$primary-100};
  --primary-200: #{$primary-200};
  --primary-300: #{$primary-300};
  --primary-400: #{$primary-400};
  --primary-500: #{$primary-500};
  --primary-600: #{$primary-600};
  --primary-700: #{$primary-700};
  --primary-800: #{$primary-800};
  --primary-900: #{$primary-900};

  --primary-color: var(--primary-500);
}

.theme--dark {
  --primary-000: #f3f3f3;
  --primary-100: #e8e8e8;
  --primary-200: #bcbcbc;
  --primary-300: #7a7a7a;
  --primary-400: #222222;
  --primary-500: #1d1819;
  --primary-600: #181112;
  --primary-700: #130a0d;
  --primary-800: #100609;
  --primary-900: #000000;

  --primary-color: var(--primary-500);
}

.theme--grey {
  --primary-000: #{$grey-50};
  --primary-100: #{$grey-100};
  --primary-200: #{$grey-200};
  --primary-300: #{$grey-300};
  --primary-400: #{$grey-400};
  --primary-500: #{$grey-500};
  --primary-600: #{$grey-600};
  --primary-700: #{$grey-700};
  --primary-800: #{$grey-800};
  --primary-900: #{$grey-900};

  --primary-color: var(--primary-500);
}

.theme--green {
  --primary-000: #{$white};
  --primary-100: #{$accent-3-100};
  --primary-200: #{$accent-3-200};
  --primary-300: #{$accent-3-300};
  --primary-400: #{$accent-3-400};
  --primary-500: #{$accent-3-500};
  --primary-600: #{$accent-3-600};
  --primary-700: #{$accent-3-700};
  --primary-800: #{$accent-3-800};
  --primary-900: #{$accent-3-900};

  --primary-color: var(--primary-500);
}

.theme--yellow {
  --primary-000: #{$white};
  --primary-100: #{$accent-2-100};
  --primary-200: #{$accent-2-200};
  --primary-300: #{$accent-2-300};
  --primary-400: #{$accent-2-400};
  --primary-500: #{$accent-2-500};
  --primary-600: #{$accent-2-600};
  --primary-700: #{$accent-2-700};
  --primary-800: #{$accent-2-800};
  --primary-900: #{$accent-2-900};

  --primary-color: var(--primary-500);
}

.theme--red {
  --primary-000: #{$white};
  --primary-100: #{$danger-100};
  --primary-200: #{$danger-200};
  --primary-300: #{$danger-300};
  --primary-400: #{$danger-400};
  --primary-500: #{$danger-500};
  --primary-600: #{$danger-600};
  --primary-700: #{$danger-700};
  --primary-800: #{$danger-800};
  --primary-900: #{$danger-900};

  --primary-color: var(--primary-500);
}

.theme--violet {
  --primary-000: #{$white};
  --primary-100: #{$accent-1-100};
  --primary-200: #{$accent-1-200};
  --primary-300: #{$accent-1-300};
  --primary-400: #{$accent-1-400};
  --primary-500: #{$accent-1-500};
  --primary-600: #{$accent-1-600};
  --primary-700: #{$accent-1-700};
  --primary-800: #{$accent-1-800};
  --primary-900: #{$accent-1-900};

  --primary-color: var(--primary-500);
}

// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.

// Gutters
$gutter-size: 16px !default;

// Grid
$grid-xxl-size: 1320px !default;
$grid-xl-size: 1200px !default;
$grid-lg-size: 992px !default;
$grid-md-size: 768px !default;
$grid-sm-size: 576px !default;

//Spacings
//
// Generate margin & padding mixins, define base spacing size
$spacing-from: 0 !default;
$spacing-to: 30 !default;

$base-size: 32px !default;
$base-size-sm: 24px !default;
$base-size-lg: 40px !default;

// Text colors
$heading-color: #121634 !default;
$text-color: #494f7d !default;
$text-color-secondary: #aaadc9 !default;
$text-color-light: #cfd1e1 !default;

// Background colors
$background-content: #f8f8f8 !default;

// Typography
//
// Font, line-height, and color for body text, headings, and more.
$font-family: 'Roboto', sans-serif !default;
$font-size-base: 14px !default;
$font-size-desktop: 12.5px !default;
$font-size-small-desktop: 10px !default;
$font-size-sm: $font-size-base * 0.875 !default;
$font-size-lg: $font-size-base * 1.25 !default;

$font-weight-light: 300 !default;
$font-weight-normal: 400 !default;
$font-weight-medium: 500 !default;
$font-weight-semibold: 600 !default;
$font-weight-bold: 700 !default;

$font-weight-base: $font-weight-normal !default;

$line-height-base: 1.414 !default; // augmented fourth
$line-height-sm: 1.25 !default; // major third
$line-height-lg: 1.618 !default; // golden ratio

$h1-font-size: $font-size-base * 2.5 !default;
$h2-font-size: $font-size-base * 2 !default;
$h3-font-size: $font-size-base * 1.75 !default;
$h4-font-size: $font-size-base * 1.5 !default;
$h5-font-size: $font-size-base * 1.25 !default;
$h6-font-size: $font-size-base !default;

// Components
//
// Define common padding and border radius sizes and more.
$border-width: 1px !default;
$border-color: $grey-200 !default;
$border-radius: 4px !default;
$border-radius-sm: $border-radius !default;
$border-radius-lg: $border-radius !default;

// Transitions
//
// Set base time & default base transition
$transition-base: all 0.3s ease-in-out !default;
$transition-time: 0.2s !default;

// Animations
$animation-base: loaderFade $transition-time forwards !default;

// Shadows
//
// Set box shadows
$box-shadow: 0px 4px 8px rgba(18, 22, 52, 0.16) !default;

// Alerts
//Define border
$alert-border: 1px solid $success-color !default;
$alert-border-radius: 4px !default;
$alert-border--info: 1px solid $info-color !default;
$alert-border--warning: 1px solid $warning-color !default;
$alert-border--danger: 1px solid $danger-color !default;
//Define color
$alert-success-color: rgba($success-100, 0.2) !default;
$alert-info-color: rgba($info-100, 0.3) !default;
$alert-warning-color: rgba($warning-100, 0.3) !default;
$alert-danger-color: rgba($danger-200, 0.3) !default;

// Define alert padding & icon size
$alert-icon-size: 20px !default;
$alert-icon-margin: 10px !default;

$alert-padding-y: 20px !default;
$alert-padding-x: 16px !default;

$alert-padding-y-sm: 16px !default;
$alert-padding-x-sm: 14px !default;

$alert-padding-y-lg: 24px !default;
$alert-padding-x-lg: 20px !default;

//Avatars
//
// Define avatar sizes & statuses background
$avatar-size-small: 30px !default;
$avatar-size-big: 60px !default;
$avatar-font-small: 9px !default;
$avatar-font-big: 13px !default;
$avatar-description-color: var(--primary-color) !default;
$avatar-status-active: $success-color !default;
$avatar-status-regular: var(--primary-color) !default;
$avatar-status-uanctive: $success-color !default;
$avatar-short-alt-font-weight: $font-weight-bold !default;
$avatar-inline-alt-font-weight: $font-weight-semibold !default;
$avatar-card-alt-font-weight: $font-weight-medium !default;

// Actions
//
// Customize tooltip, height & icon of actions
$actions-tooltip-height: 250px !default;
$actions-tooltip-min-width: 140px !default;
$actions-tooltip-padding: 0 !default;
$actions-tooltip-title-font-size: 11px !default;
$actions-tooltip-title-padding: 12.5px !default;
$actions-tooltip-title-color: $text-color !default;
$actions-tooltip-item-font-size: 12px !default;
$actions-tooltip-item-padding: $actions-tooltip-title-padding !default;
$actions-border: 1px solid $border-color !default;
$actions-height: 36px !default;
$actions-icon-color: var(--primary-color) !default;
$actions-icon-hover-color: $white !default;

// Badges
//
// Customize size, padding & colors of badge
$badge-size: 20px !default;
$badge-min-size: 30px !default;
$badge-border-radius: 100% !default;
$badge-font-size: 14px !default;
$badge-font-weight: 500 !default;
$badge-padding: 0 !default;
$badge-text-padding: 0 5px !default;
$badge-text-border-radius: $border-radius !default;
$badge-transform: translate3d(50%, -50%, 0) !default;

$badge-regular-bg-color: $white !default;
$badge-success-bg-color: $success-color !default;
$badge-info-bg-color: $info-color !default;
$badge-warning-bg-color: $warning-color !default;
$badge-danger-bg-color: $danger-color !default;

// Card
//
// Style cards elements.
$details-card-padding-size: $gutter-size !default;
$details-card-border: 1px solid !default;
$details-card-border-color: $border-color !default;
$details-card-border-radius: $border-radius !default;
$details-card-header-icon-size: $base-size * 2 !default;
$details-card-header-icon-margin-right: $details-card-padding-size !default;
$details-card-header-border-bottom: 1px solid !default;
$details-card-header-border-bottom-color: $border-color !default;
$details-card-footer-border-top: 1px solid !default;
$details-card-footer-border-top-color: $border-color !default;

// Card
$card-padding-x: 20px !default;
$card-padding-y: 15px !default;
$card-padding-x-sm: 15px !default;
$card-padding-y-sm: 10px !default;
$card-padding-x-lg: 20px !default;
$card-padding-y-lg: 20px !default;

$card-border-radius: $border-radius !default;
$card-border-color: $border-color !default;
$card-bordered-color: var(--primary-color) !default;
$card-header-bg-color: $white !default;
$card-body-bg-color: $grey-100 !default;
$card-footer-bg-color: $white !default;
$card-box-shadow: $box-shadow !default;

// Collapse
$collapse-padding-x: 20px !default;
$collapse-padding-y: 15px !default;
$collapse-padding-x-sm: 15px !default;
$collapse-padding-y-sm: 10px !default;
$collapse-padding-x-lg: 20px !default;
$collapse-padding-y-lg: 20px !default;

$collapse-border-radius: $border-radius !default;
$collapse-border-color: $border-color !default;
$collapse-bordered-color: var(--primary-color) !default;
$collapse-header-bg-color: $white !default;
$collapse-body-bg-color: $grey-100 !default;
$collapse-group-box-shadow: $box-shadow !default;

// Links
//
// Style anchor elements.
$link-color: var(--primary-color) !default;
$link-decoration: none !default;
$link-shade-percentage: 20% !default;
$link-hover-color: var(--primary-600) !default;
$link-hover-decoration: none !default;

// ListGroup
//
// Style list group items
$list-group-background-color: $white !default;
$list-group-border: 1px solid $border-color !default;
$list-group-item-padding: $gutter-size !default;
$list-group-item-border-bottom: 1px solid $border-color !default;

// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.
// button medium height = 32px
$btn-padding-y: 5px !default;
$btn-padding-x: 11px !default;

$btn-font-family: $font-family !default;
$btn-font-weight: $font-weight-medium !default;
$btn-font-size: $font-size-base !default;
$btn-line-height: $line-height-base !default;

// button small height = 24px
$btn-padding-y-sm: 3px !default;
$btn-padding-x-sm: 7px !default;
$btn-font-size-sm: $font-size-sm !default;
$btn-font-weight-sm: $font-weight-medium !default;
$btn-line-height-sm: $line-height-sm !default;

// button large height = 40px
$btn-padding-y-lg: 9px !default;
$btn-padding-x-lg: 19px !default;
$btn-font-size-lg: $font-size-base !default;
$btn-font-weight-lg: $font-weight-bold !default;
$btn-line-height-lg: $line-height-base !default;

$btn-border-width: $border-width !default;

$btn-link-color: $link-color !default;
$btn-link-hover-color: $link-hover-color !default;
$btn-link-disabled-color: $grey-500 !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius: $border-radius !default;
$btn-border-radius-sm: $border-radius-sm !default;
$btn-border-radius-lg: $border-radius-lg !default;

$btn-type-ghost-border-color: var(--primary-color) !default;
$btn-type-ghost-background: transparent !default;
$btn-type-ghost-color: var(--primary-color) !default;
$btn-type-ghost-hover-color: $white !default;
$btn-type-ghost-hover-background: var(--primary-color) !default;
$btn-type-ghost-hover-border-color: var(--primary-color) !default;
$btn-type-ghost-active-color: $white !default;
$btn-type-ghost-active-background: var(--primary-600) !default;
$btn-type-ghost-active-border-color: var(--primary-600) !default;
$btn-type-ghost-icon-color: var(--primary-color) !default;

// Layout
//
// Customize layout top bar & toggler & avatar
$layout-top-bar-height: 58px !default;
$layout-top-bar-border-color: 1px solid $border-color !default;
$layout-top-bar-background: $white !default;

$layout-top-bar-side-left-margin-left: $gutter-size !default;
$layout-top-bar-side-right-margin-left: $gutter-size !default;

$layout-top-bar-avatar-background: var(--primary-color) !default;
$layout-top-bar-avatar-color: $white !default;
$layout-top-bar-avatar-alt-color: $text-color !default;
$layout-top-bar-avatar-icon-btn-color: var(--primary-color) !default;
$layout-top-bar-avatar-icon-btn-size: 32px !default;
$layout-top-bar-avatar-icon-btn-padding: 0 !default;

$layout-top-bar-toggler-color: var(--primary-color) !default;
$layout-top-bar-toggler-hover-color: var(--primary-color) !default;
$layout-top-bar-toggler-border-color: $border-color !default;

$layout-content-background: $white !default;

$layout-footer-background: transparent !default;
$layout-footer-height: $layout-top-bar-height !default;
$layout-footer-fixed-border: 1px solid $border-color !default;

// Label
//
// Define font size, color, border of labels
$label-font-size: 12px !default;
$label-height: 24px !default;
$label-padding: 0 12px !default;
$label-color: $text-color !default;
$label-border: 1px solid !default;
$label-border-radius: $border-radius !default;
$label-circle-border-radius: 12px !default;

// Sidebar
//
// Define logo & sidebar width, background, sidebar item
$sidebar-width: 192px !default;
$sidebar-border: 1px solid $border-color !default;
$sidebar-background: $white !default;
$sidebar-bottom-background: $white !default;

$sidebar-item-text-color: $text-color !default;
$sidebar-item-hover-background: var(--primary-color) !default;
$sidebar-item-hover-color: $white !default;
$sidebar-logo-width: $sidebar-width - $gutter-size * 3 !default;

// Table
//
// Customize thead, tbody of table
$table-border: 1px solid $border-color !default;
$table-border-radius: $border-radius !default;
$table-box-shadow: none !default;
$table-body-cell-border: $table-border !default;
$table-body-cell-odd-background: $background-content !default;
$table-body-cell-hover-background: $grey-100 !default;
$table-body-cell-text-align: left !default;
$table-body-cell-justify-content: $table-body-cell-text-align !default;
$table-body-mobile-cell-border: $table-border !default;
$table-head-font-weight: 500 !default;
$table-body-font-size: 10px !default;
$table-head-cell-text-align: left !default;
$table-head-font-size: 13px !default;
$table-head-background: $white !default;
$table-head-cell-border: $table-border !default;
$table-head-cell-bottom-border: 1px solid var(--primary-color) !default;
$table-sub-cell-border: $table-border !default;
$table-font-size: $font-size-base !default;
$table-filter-active-color: $text-color-secondary !default;

// SortBy
//
// Customize height & icon of sortBy
$sort-by-height: 36px !default;
$sort-by-tooltip-height: 250px !default;
$sort-by-icon-color: var(--primary-color) !default;
$sort-by-icon-hover-color: $white !default;
$sort-by-text-color: $text-color !default;
$sort-by-text-hover-color: $white !default;

// Scrollbar
//
// Define base size & colors of scrollbar
$scrollbar-size: 8px !default;
$scrollbar-track-background-color: $background-content !default;
$scrollbar-thumb-background-color: $border-color !default;
$scrollbar-thumb-hover-background-color: var(--primary-color) !default;

// Icon
$icon-svg-color: var(--primary-color) !default;

// Tabs
$tab-item-margin: 0 30px 0 0 !default;
$tab-item-padding: 20px 0 !default;
$tab-border: none !default;
$tab-border-bottom: 1px solid #111 !default;
$tab-item-border-bottom-active: 2px solid var(--primary-color) !default;
$tab-item-disabled-color: $normal-color !default;
$tab-content-padding: 10px !default;

// Form inputs
//
// Define base size & colors of scrollbar
//
// Form fields
$field-margin-bottom: 15px !default;

$field-label-color: $text-color !default;
$field-label-font-size: 12px !default;
$field-label-font-weight: 400 !default;

$field-extra-color: $text-color-secondary !default;

// Input
$input-padding-y: 6px !default;
$input-padding-x: 8px !default;

$input-padding-y-sm: 4px !default;
$input-padding-x-sm: 6px !default;

$input-padding-y-lg: 10px !default;
$input-padding-x-lg: 10px !default;

// Select
$select-padding-y: $input-padding-y !default;
$select-padding-x: $input-padding-x !default;

$select-padding-y-sm: $input-padding-y-sm !default;
$select-padding-x-sm: $input-padding-x-sm !default;

$select-padding-y-lg: $input-padding-y-lg !default;
$select-padding-x-lg: $input-padding-x-lg !default;

$select-padding-prefix-y: $input-padding-y !default;
$select-padding-prefix-x: $input-padding-x !default;

$select-prefix-border-right: 1px solid $border-color;

// Calendar
$calendar-padding-y: $input-padding-y !default;
$calendar-padding-x: $input-padding-x !default;

$calendar-padding-y-sm: $input-padding-y-sm !default;
$calendar-padding-x-sm: $input-padding-x-sm !default;

$calendar-padding-y-lg: $input-padding-y-lg !default;
$calendar-padding-x-lg: $input-padding-x-lg !default;

// Notify
$notify-box-shadow: $box-shadow !default;
$notify-width: auto !default;
$notify-color: $white !default;
$notify-padding: $gutter-size !default;
$notify-border-radius: $border-radius !default;

/// Breakpoint list
///
/// Name your breakpoints in a way that creates a ubiquitous language
/// across team members. It will improve communication between
/// stakeholders, designers, developers, and testers.
///
/// @type Map
/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples
$breakpoints: (
  mobile: 320px,
  small-tablet: 480px,
  tablet: 640px,
  small-desktop: 768px,
  desktop: 1024px,
  wide: 1280px,
  extra-wide: 1366px,
  extra-extra-wide: 1400px,
) !default;

/// Show breakpoints in the top right corner
///
/// If you want to display the currently active breakpoint in the top
/// right corner of your site during development, add the breakpoints
/// to this list, ordered by width. For example: (mobile, tablet, desktop).
///
/// @example scss
///   @use 'path/to/mq' with ($show-breakpoints: ('mobile', 'tablet', 'desktop'));
///
///
/// @type map
$show-breakpoints: () !default;

/// Customize the media type (for example: `@media screen` or `@media print`)
/// By default sass-mq uses an "all" media type (`@media all and …`)
///
/// If you want to overried the media type, you can use this option.
/// @example scss
///   @use 'path/to/mq' with ($media-type: 'screen');
///
/// @type String
/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example
$media-type: all !default;

/// Convert pixels to ems
///
/// @param {Number} $px - value to convert
///
/// @example scss
///  $font-size-in-ems: px2em(16px);
///  p { font-size: px2em(16px); }
///
/// @returns {Number}
@function px2em($px) {
  @if math.is-unitless($px) {
    @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels.";
    @return px2em($px * 1px);
  }
  // if $px is compatible with em units, then return value unchanged
  @if math.compatible($px, 1em) {
    @return $px;
  }
  @return math.div($px, 16px) * 1em;
}

/// Get a breakpoint's width
///
/// @param {String} $name - Name of the breakpoint. One of $breakpoints
///
/// @example scss
///  $tablet-width: get-breakpoint-width(tablet);
///  @media (min-width: get-breakpoint-width(tablet)) {}
///
/// @requires {Variable} $breakpoints
///
/// @returns {Number} Value in pixels
@function get-breakpoint-width($name, $breakpoints: $breakpoints) {
  @if map.has-key($breakpoints, $name) {
    @return map.get($breakpoints, $name);
  } @else {
    @warn "Breakpoint #{$name} wasn't found in $breakpoints.";
    @return null;
  }
}

/// Media Query mixin
///
/// @param {String | Boolean} $from [false] - One of $breakpoints
/// @param {String | Boolean} $until [false] - One of $breakpoints
/// @param {String | Boolean} $and [false] - Additional media query parameters
/// @param {String} $media-type [$media-type] - Media type: screen, print…
///
/// @ignore Undocumented API, for advanced use only:
/// @ignore @param {Map} $breakpoints [$breakpoints]
///
/// @content styling rules, wrapped into a @media query when $responsive is true
///
/// @requires {Variable} $media-type
/// @requires {Variable} $breakpoints
/// @requires {function} px2em
/// @requires {function} get-breakpoint-width
///
/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples
///
/// @example scss
///  @use 'path/to/mq' as *;
///  .element {
///    @include mq($from: mobile) {
///      color: red;
///    }
///    @include mq($until: tablet) {
///      color: blue;
///    }
///    @include mq(mobile, tablet) {
///      color: green;
///    }
///    @include mq($from: tablet, $and: '(orientation: landscape)') {
///      color: teal;
///    }
///    @include mq(950px) {
///      color: hotpink;
///    }
///    @include mq(tablet, $media-type: screen) {
///      color: hotpink;
///    }
///    // Advanced use:
///    $my-breakpoints: (L: 900px, XL: 1200px);
///    @include mq(L, $breakpoints: $my-breakpoints) {
///      color: hotpink;
///    }
///  }
@mixin mq($from: false, $until: false, $and: false, $media-type: $media-type, $breakpoints: $breakpoints) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  // From: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: px2em($from);
    } @else {
      $min-width: px2em(get-breakpoint-width($from, $breakpoints));
    }
  }

  // Until: that breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: px2em($until);
    } @else {
      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - 0.01em;
    }
  }

  @if $min-width != 0 {
    $media-query: '#{$media-query} and (min-width: #{$min-width})';
  }
  @if $max-width != 0 {
    $media-query: '#{$media-query} and (max-width: #{$max-width})';
  }
  @if $and {
    $media-query: '#{$media-query} and #{$and}';
  }

  // Remove unnecessary media query prefix 'all and '
  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: str-slice(unquote($media-query), 6);
  }

  @media #{$media-type + $media-query} {
    @content;
  }
}

/// Quick sort
///
/// @author Sam Richards
/// @access private
/// @param {List} $list - List to sort
/// @returns {List} Sorted List
@function _quick-sort($list) {
  $less: ();
  $equal: ();
  $large: ();

  @if length($list) > 1 {
    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));

    @each $item in $list {
      @if ($item == $seed) {
        $equal: list.append($equal, $item);
      } @else if ($item < $seed) {
        $less: list.append($less, $item);
      } @else if ($item > $seed) {
        $large: list.append($large, $item);
      }
    }

    @return join(join(_quick-sort($less), $equal), _quick-sort($large));
  }

  @return $list;
}

/// Sort a map by values (works with numbers only)
///
/// @access private
/// @param {Map} $map - Map to sort
/// @returns {Map} Map sorted by value
@function _map-sort-by-value($map) {
  $map-sorted: ();
  $map-keys: map.keys($map);
  $map-values: map.values($map);
  $map-values-sorted: _quick-sort($map-values);

  // Reorder key/value pairs based on key values
  @each $value in $map-values-sorted {
    $index: index($map-values, $value);
    $key: list.nth($map-keys, $index);
    $map-sorted: map.merge(
      $map-sorted,
      (
        $key: $value,
      )
    );

    // Unset the value in $map-values to prevent the loop
    // from finding the same index twice
    $map-values: list.set-nth($map-values, $index, 0);
  }

  @return $map-sorted;
}

/// Add a breakpoint
///
/// @param {String} $name - Name of the breakpoint
/// @param {Number} $width - Width of the breakpoint
///
/// @requires {Variable} $breakpoints
///
/// @example scss
///  @include add-breakpoint(tvscreen, 1920px);
///  @include mq(tvscreen) {}
@mixin add-breakpoint($name, $width) {
  $new-breakpoint: (
    $name: $width,
  );
  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;
  $breakpoints: _map-sort-by-value($breakpoints) !global;
}

/// Show the active breakpoint in the top right corner of the viewport
/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint
///
/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner
/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes
///
/// @requires {Variable} $breakpoints
/// @requires {Variable} $show-breakpoints
///
/// @example scss
///  // Show breakpoints using global settings
///  @include show-breakpoints;
///
///  // Show breakpoints using custom settings
///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));
@mixin show-breakpoints($show-breakpoints: $show-breakpoints, $breakpoints: $breakpoints) {
  body:before {
    background-color: #fcf8e3;
    border-bottom: 1px solid #fbeed5;
    border-left: 1px solid #fbeed5;
    color: #c09853;
    font: small-caption;
    padding: 3px 6px;
    pointer-events: none;
    position: fixed;
    right: 0;
    top: 0;
    z-index: 100;

    // Loop through the breakpoints that should be shown
    @each $show-breakpoint in $show-breakpoints {
      $width: get-breakpoint-width($show-breakpoint, $breakpoints);
      @include mq($show-breakpoint, $breakpoints: $breakpoints) {
        content: '#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})';
      }
    }
  }
}

@if list.length($show-breakpoints) > 0 {
  @include show-breakpoints;
}

// pulse
@mixin pulse($name, $color) {
  @keyframes #{$name} {
    0% {
      -moz-box-shadow: 0 0 0 0 rgba($color, 0.7);
      box-shadow: 0 0 0 0 rgba($color, 0.7);
    }
    70% {
      -moz-box-shadow: 0 0 0 10px rgba($color, 0);
      box-shadow: 0 0 0 10px rgba($color, 0);
    }
    100% {
      -moz-box-shadow: 0 0 0 0 rgba($color, 0);
      box-shadow: 0 0 0 0 rgba($color, 0);
    }
  }
}

// fade
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@mixin fadeBackground($name, $color) {
  @keyframes #{$name} {
    from {
      background: rgba($color, 0);
    }
    to {
      background: rgba($color, 1);
    }
  }
}

@mixin fadeExactBackground($name, $color) {
  @keyframes #{$name} {
    from {
      background: rgba($color, 0);
    }
    to {
      background: $color;
    }
  }
}

@mixin fadeAnimation {
  animation: $animation-base;
  transition: opacity $transition-time;
}

@mixin flex {
  display: flex;
}

@mixin flex-column {
  @include flex;
  flex-direction: column;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  @include flex;
  align-items: center;
}

@mixin flex-center-horiz {
  @include flex;
  justify-content: center;
}

@mixin flex-space-between {
  @include flex;
  justify-content: space-between;
}

@mixin flex-center-between {
  @include flex-center-vert;
  justify-content: space-between;
}

@mixin flex-center-end {
  @include flex-center-vert;
  justify-content: flex-end;
}

@mixin flex-center {
  @include flex-center-horiz;
  align-items: center;
}

@mixin flex-center-row {
  @include flex-center-vert;
  flex-direction: row;
}

@mixin flex-self-center {
  @include flex;
  align-self: center;
}

@mixin flex-items-end {
  @include flex;
  align-items: flex-end;
}

@mixin flex-start-center {
  @include flex-center;
  align-items: flex-start;
}

.flex {
  @include flex;
}

.flex-column {
  @include flex-column;
}

.flex--row {
  flex-direction: row !important;
}
.flex--column {
  flex-direction: column !important;
}
.flex--row-reverse {
  flex-direction: row-reverse !important;
}
.flex--column-reverse {
  flex-direction: column-reverse !important;
}

.flex--wrap {
  flex-wrap: wrap !important;
}
.flex--nowrap {
  flex-wrap: nowrap !important;
}
.flex--wrap-reverse {
  flex-wrap: wrap-reverse !important;
}
.flex--fill {
  flex: 1 1 auto !important;
}
.flex--grow-0 {
  flex-grow: 0 !important;
}
.flex--grow-1 {
  flex-grow: 1 !important;
}
.flex--shrink-0 {
  flex-shrink: 0 !important;
}
.flex--shrink-1 {
  flex-shrink: 1 !important;
}

.justify-content--start {
  justify-content: flex-start !important;
}
.justify-content--end {
  justify-content: flex-end !important;
}
.justify-content--center {
  justify-content: center !important;
}
.justify-content--between {
  justify-content: space-between !important;
}
.justify-content--around {
  justify-content: space-around !important;
}

.align-items--start {
  align-items: flex-start !important;
}
.align-items--end {
  align-items: flex-end !important;
}
.align-items--center {
  align-items: center !important;
}
.align-items--baseline {
  align-items: baseline !important;
}
.align-items--stretch {
  align-items: stretch !important;
}

.align-content--start {
  align-content: flex-start !important;
}
.align-content--end {
  align-content: flex-end !important;
}
.align-content--center {
  align-content: center !important;
}
.align-content--between {
  align-content: space-between !important;
}
.align-content--around {
  align-content: space-around !important;
}
.align-content--stretch {
  align-content: stretch !important;
}

.align-self--auto {
  align-self: auto !important;
}
.align-self--start {
  align-self: flex-start !important;
}
.align-self--end {
  align-self: flex-end !important;
}
.align-self--center {
  align-self: center !important;
}
.align-self--baseline {
  align-self: baseline !important;
}
.align-self--stretch {
  align-self: stretch !important;
}

@mixin fontLight {
  font-family: $font-family;
  font-weight: $font-weight-light;
}

@mixin fontRegular {
  font-family: $font-family;
  font-weight: $font-weight-normal;
}

@mixin fontMedium {
  font-family: $font-family;
  font-weight: $font-weight-medium;
}

@mixin fontSemiBold {
  font-family: $font-family;
  font-weight: $font-weight-semibold;
}

@mixin fontBold {
  font-family: $font-family;
  font-weight: $font-weight-bold;
}

@mixin text-ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

@mixin elevation-1() {
  box-shadow: 0px 4px 8px rgba(18, 22, 52, 0.16);
}

@mixin elevation-2() {
  box-shadow: 0px 8px 16px rgba(18, 22, 52, 0.16);
}

@mixin elevation-3() {
  box-shadow: 0px 16px 32px rgba(18, 22, 52, 0.16);
}

@mixin elevation-4() {
  box-shadow: 0px 32px 40px rgba(18, 22, 52, 0.16);
}

.elevation {
  &-1 {
    @include elevation-1;
  }

  &-2 {
    @include elevation-2;
  }

  &-3 {
    @include elevation-3;
  }

  &-4 {
    @include elevation-4;
  }
}

@mixin placeholder {
  &::-webkit-input-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin hiddenScroll {
  scrollbar-color: transparent transparent;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
    background: transparent;
    border-radius: 0;
  }

  &::-webkit-scrollbar-thumb {
    background-color: transparent;
    border-radius: 0;
  }

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }
}

@mixin greyScroll {
  scrollbar-color: transparent $border-color;
  scrollbar-width: thin;

  &::-webkit-scrollbar {
    width: rem(3px);
    height: rem(3px);
    background: transparent;
    border-radius: 0;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $border-color;
    border-radius: 50%;
  }

  &::-webkit-scrollbar {
    width: rem(3px);
    height: rem(3px);
  }
}

@mixin hover-state {
  &:hover,
  &:focus,
  &:active,
  .active {
    @content;
  }
}

@mixin close-icon-container {
  cursor: pointer;
  z-index: 2;
  display: flex;
  align-items: center;
  color: $text-color;

  .ebs-icon {
    padding: rem(3px);
    font-size: 1rem;

    path {
      stroke-width: 1;
    }
  }
}


.hide {
  display: none;
}

.inline {
  display: inline-block;
}

.full-width {
  width: 100%;
}

.relative {
  position: relative;
}

@for $i from $spacing-from through $spacing-to {
  .m-#{$i} {
    margin: rem(#{$i}px) !important;
  }

  .mt-#{$i} {
    margin-top: rem(#{$i}px) !important;
  }

  .mb-#{$i} {
    margin-bottom: rem(#{$i}px) !important;
  }

  .ml-#{$i} {
    margin-left: rem(#{$i}px) !important;
  }

  .mr-#{$i} {
    margin-right: rem(#{$i}px) !important;
  }

  .mx-#{$i} {
    margin-left: rem(#{$i}px) !important;
    margin-right: rem(#{$i}px) !important;
  }

  .my-#{$i} {
    margin-top: rem(#{$i}px) !important;
    margin-bottom: rem(#{$i}px) !important;
  }
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-auto {
  margin-top: auto;
  margin-bottom: auto;
}

@for $i from $spacing-from through $spacing-to {
  .p-#{$i} {
    padding: rem(#{$i}px) !important;
  }

  .pr-#{$i} {
    padding-right: rem(#{$i}px) !important;
  }

  .pl-#{$i} {
    padding-left: rem(#{$i}px) !important;
  }

  .pt-#{$i} {
    padding-top: rem(#{$i}px) !important;
  }

  .pb-#{$i} {
    padding-bottom: rem(#{$i}px) !important;
  }

  .px-#{$i} {
    padding-left: rem(#{$i}px) !important;
    padding-right: rem(#{$i}px) !important;
  }

  .py-#{$i} {
    padding-top: rem(#{$i}px) !important;
    padding-bottom: rem(#{$i}px) !important;
  }
}

.uppercase {
  text-transform: uppercase;
}

.no-wrap {
  white-space: nowrap !important;
}



// Atoms
// fade
@include fadeBackground('regularFade', #000);

// button
.ebs-button {
  @include fontMedium;
  cursor: pointer;
  width: 100%;
  font-size: rem(13px);
  line-height: rem($btn-line-height);
  border-color: transparent;
  background: transparent;
  padding: 0;
  outline: none;

  &--is-icon {
    @include flex-center;
    height: 100%;
  }

  &--prefix button.ebs-button {
    padding-left: rem(40px);
  }

  &--icon {
    display: flex;
    align-items: center;
  }

  &--block {
    width: 100%;
    display: block;
  }

  // button type (Color)
  &--primary {
    border-color: var(--primary-color);
    background-color: var(--primary-color);
    color: $white;

    &:hover {
      border-color: var(--primary-600);
      background-color: var(--primary-600);
    }

    &:active,
    &.active {
      border-color: var(--primary-700);
      background-color: var(--primary-700);
    }

    .ebs-icon {
      color: $white;
    }
  }

  &--primary & {
    color: $white;

    :hover {
      color: $white;
    }
  }

  &--dark {
    border-color: $black;
    background-color: $black;
    color: $white;

    @include hover-state {
      border-color: var(--primary-600);
      background-color: var(--primary-600);
    }

    .ebs-button,
    .ebs-icon {
      color: $white;
    }

    .ebs-button,
    .ebs-icon {
      color: $white;
    }
  }

  &--dark & {
    color: $white;

    :hover {
      color: $white;
    }
  }

  &--fill {
    border-color: var(--primary-100);
    background-color: var(--primary-100);
    color: var(--primary-color);

    &:hover {
      border-color: var(--primary-color);
      background-color: var(--primary-color);
      color: $white;

      .ebs-button,
      .ebs-icon {
        color: $white;
      }
    }

    &:active,
    &.active {
      border-color: var(--primary-600);
      background-color: var(--primary-600);
      color: $white;

      .ebs-button,
      .ebs-icon {
        color: $white;
      }
    }

    .ebs-icon {
      color: var(--primary-color);
    }
  }

  &--fill & {
    color: var(--primary-color);
  }

  &--ghost.ebs-button__wrapper {
    background-color: $btn-type-ghost-background;
    border-color: $btn-type-ghost-border-color;
    color: $btn-type-ghost-color;

    &:hover {
      border-color: $btn-type-ghost-hover-border-color;
      background-color: $btn-type-ghost-hover-background;
      color: $btn-type-ghost-hover-color;

      .ebs-button,
      .ebs-icon {
        color: $btn-type-ghost-hover-color;
      }
    }

    &:active,
    &.active {
      border-color: $btn-type-ghost-active-border-color;
      background-color: $btn-type-ghost-active-background;
      color: $btn-type-ghost-active-color;

      .ebs-button,
      .ebs-icon {
        color: $btn-type-ghost-active-color;
      }
    }

    .ebs-icon {
      color: $btn-type-ghost-icon-color;
    }
  }

  &--ghost & {
    color: $btn-type-ghost-color;
  }

  &--text {
    background-color: transparent;
    color: var(--primary-color);

    &:hover {
      background-color: transparent;

      .ebs-button,
      .ebs-icon {
        color: var(--primary-600);
      }
    }

    &:active,
    &.active {
      background-color: transparent;

      .ebs-button,
      .ebs-icon {
        color: var(--primary-700);
      }
    }

    .ebs-icon {
      color: var(--primary-color);
    }
  }

  &--text & {
    color: var(--primary-color);
  }

  &--disabled {
    background-color: $border-color;

    .ebs-button,
    .ebs-icon {
      cursor: not-allowed;
      color: $grey-500;
    }
  }

  // button size
  &--large {
    border-radius: rem($btn-border-radius-lg);
  }

  &--large & {
    padding: rem($btn-padding-y-lg $btn-padding-x-lg);
    font-weight: $btn-font-weight-lg;
    font-size: rem($btn-font-size-lg);

    &.ebs-button--is-icon {
      padding: rem($btn-padding-y-lg);
    }
  }

  &--medium {
    border-radius: rem($btn-border-radius);
  }

  &--medium & {
    padding: rem($btn-padding-y $btn-padding-x);
    font-weight: $btn-font-weight;
    font-size: rem($btn-font-size);

    &.ebs-button--is-icon {
      padding: rem($btn-padding-y);
    }
  }

  &--small {
    border-radius: rem($btn-border-radius-sm);
  }

  &--small & {
    padding: rem($btn-padding-y-sm $btn-padding-x-sm);
    font-weight: $btn-font-weight-sm;
    font-size: rem($btn-font-size-sm);
    line-height: rem($btn-line-height-sm);

    &.ebs-button--is-icon {
      padding: rem($btn-padding-y-sm);
    }
  }

  &__wrapper {
    position: relative;
    display: inline-block;
    text-align: center;
    border-radius: rem($border-radius);
    transition: $transition-base;
    border: 1px solid transparent;

    &.ebs-button--round {
      border-radius: 100%;

      .ebs-button {
        @include flex;
      }

      &.ebs-button--small .ebs-button {
        padding: rem($btn-padding-x-sm);
      }
      &.ebs-button--medium .ebs-button {
        padding: rem($btn-padding-x);
      }
      &.ebs-button--large .ebs-button {
        padding: rem($btn-padding-x-lg);
      }
    }
  }

  &__loading {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    border-radius: rem($border-radius);
    pointer-events: none;

    &-regular {
      animation: regularFade 0.25s forwards;
    }

    .ebs-loader__spinner {
      position: absolute;
      left: calc(50% - 7.5px);
      top: calc(50% - 7.5px);
      transform: translate(-50%, -50%);
    }
  }

  &__prefix {
    position: absolute;
    left: rem(10px);
    top: 50%;
    transform: translateY(-50%);
    pointer-events: none;
    display: flex;
    align-items: center;
  }

  &__group {
    display: flex;
    flex-wrap: nowrap;

    .ebs-button {
      @include text-ellipsis;
    }

    .ebs-button__wrapper:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .ebs-button__wrapper:not(:first-child):not(:last-child) {
      border-radius: 0;
    }

    .ebs-button__wrapper:not(:last-child) {
      border-right: none;
    }

    .ebs-button__wrapper:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

// Input
.ebs-input__wrapper {
  position: relative;
  border: 1px solid $border-color;
  background-color: $white;
  border-radius: rem($border-radius);

  &.has-prefix .ebs-input {
    padding-left: rem(37.5px);
  }

  &.has-suffix .ebs-input {
    padding-right: rem(37.5px);
  }

  &--active,
  &.focus {
    border-color: var(--primary-color);
    background-color: $white;

    .ebs-input {
      color: $heading-color;
    }
  }

  &--unactive {
    border-color: $border-color;
    background-color: $white;
  }

  &.has-error {
    border-color: $danger-color;
    background-color: $white;
  }

  &.disabled {
    border-color: $grey-500;
    background-color: $white;

    .ebs-input {
      color: $grey-500;
      cursor: not-allowed;

      @include placeholder {
        color: $grey-500;
      }
    }
  }

  &.ebs-input-style--grey {
    background-color: $grey-50;
  }

  .ebs-icon {
    color: $heading-color;
  }
}

// input html element
.ebs-input {
  @include fontRegular;
  background: transparent;
  border: none;
  width: 100%;
  display: block;
  font-size: rem(14px);
  padding: rem($select-padding-y $select-padding-x);
  color: $heading-color;
  min-height: 100%;

  @include placeholder {
    color: $text-color-secondary;
  }

  &:focus {
    outline: none;
  }

  &-container {
    position: relative;
    width: 100%;
  }

  &__prefix,
  &__suffix {
    position: absolute;
    left: rem(10px);
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;

    .ebs-icon {
      font-size: rem(16px);
    }
  }

  &__prefix.clickable,
  &__suffix.clickable {
    cursor: pointer;
    z-index: 2;
  }

  &__prefix.not-clickable,
  &__suffix.not-clickable {
    cursor: default;
    z-index: 2;
  }

  &__wrapper:not(.has-prefix) &__prefix + &__container {
    padding-left: calc(#{rem($gutter-size)} + #{rem($gutter-size)} / 2);
  }

  &__suffix {
    left: inherit;
    right: rem(10px);

    & + .ebs-input__container .ebs-input__clear {
      right: rem($gutter-size * 2);
    }
  }

  // Sizes
  &--small {
    max-height: rem($base-size-sm);
    font-size: rem(12px);
    padding: rem($input-padding-y-sm $input-padding-x-sm);
  }
  &--medium {
    max-height: rem($base-size);
    padding: rem($input-padding-y $input-padding-x);
  }
  &--large {
    max-height: rem($base-size-lg);
    padding: rem($input-padding-y-lg $input-padding-x-lg);
  }
}

.ebs-input__clear {
  position: absolute;
  right: calc(#{rem($gutter-size)} / 2);
  top: 50%;
  color: $text-color;
  transform: translate3d(0, -50%, 0);
  font-size: rem(22px);
  display: inline-block;
  padding: rem(0 7px);
  margin: rem(0 -7px);
  @include close-icon-container;
}

.ebs-icon {
  font-size: 1em;
  color: $icon-svg-color;
  transition: transform $transition-time;

  &--arrow-right {
    transform: rotate(90deg);
  }

  &--arrow-bottom {
    transform: rotate(180deg);
  }

  &--arrow-left {
    transform: rotate(270deg);
  }
}

// Label
.ebs-label {
  @include fontRegular;
  position: relative;
  white-space: nowrap;
  font-size: rem($label-font-size);
  color: $label-color;
  border-radius: rem($label-border-radius);

  .ebs-icon {
    color: $label-color;
  }

  // Statuses

  &--success {
    color: $success-color;
    border-color: $success-color;
  }

  &--warning {
    color: $warning-color;
    border-color: $warning-color;
  }

  &--danger {
    color: $danger-color;
    border-color: $danger-color;
  }

  &--danger.ebs-label--icon {
    background: $white;
    border-color: $white;

    .ebs-icon {
      color: $danger-color;
    }
  }

  &--info {
    color: $info-color;
    border-color: $info-color;
  }

  // Types

  &--circle,
  &--fill,
  &--ghost {
    @include flex-center;
    display: inline-flex;
    height: rem($label-height);
    padding: rem($label-padding);
  }

  &--icon {
    @include flex-center;
    width: rem($gutter-size);
    height: rem($gutter-size);
    float: left;
    padding: 0;
    margin-right: calc(#{rem($gutter-size)} / 2);
  }

  &--circle {
    font-size: rem($label-font-size);
    border-radius: rem($label-circle-border-radius);

    &.ebs-label--fill:not(.ebs-label--danger) {
      color: $white;

      .ebs-icon {
        color: $white;
      }
    }

    .ebs-icon {
      color: $label-color;
    }
  }

  &--ghost {
    border: $label-border;
  }

  &--primary {
    background-color: var(--primary-000);
    color: var(--primary-color);
    border-color: var(--primary-color);
  }

  &--fill {
    color: $white;
    background-color: $label-color;

    &.ebs-label--success {
      background-color: $success-color;
    }

    &.ebs-label--warning {
      background-color: $warning-color;
    }

    &.ebs-label--danger:not(.ebs-label--icon):not(.disabled) {
      background-color: $danger-color;
    }

    &.ebs-label--info {
      background-color: $info-color;
    }

    &.disabled {
      cursor: not-allowed;
      color: $grey-500;
      background: $grey-100;
    }

    &.ebs-icon {
      color: $white;
    }
  }

  &.disabled {
    cursor: not-allowed;
    color: $grey-500;
    border-color: $grey-500;
  }

  &.has-prefix,
  &.has-prefix.ebs-label--circle {
    padding-left: rem(22.5px);
  }

  &.has-suffix,
  &.has-suffix.ebs-label--circle {
    padding-right: rem(27.5px);
  }

  &__prefix,
  &__suffix {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    display: flex;
    align-items: center;

    .ebs-icon__close:hover svg {
      opacity: 0.5;
    }

    svg {
      font-size: rem(12px);
    }
  }

  &__prefix {
    left: rem(7.5px);
  }

  &__suffix {
    right: rem(7.5px);
  }
}

.ebs-list-group {
  background-color: $list-group-background-color;
  border: $list-group-border;

  &__item {
    padding: rem($list-group-item-padding);

    &:not(:last-child) {
      border-bottom: $list-group-item-border-bottom;
    }
  }
}

.ebs-extra {
  margin-top: rem(2.5px);
  color: $text-color-secondary;
  @include fontRegular;
  font-size: rem(10px);

  &.has-error {
    color: $danger-color;
  }

  &.disabled {
    color: $grey-500;
  }

  &--success {
    color: $success-color;
    border-color: $success-color;
  }

  &--warning {
    color: $warning-color;
    border-color: $warning-color;
  }

  &--danger {
    color: $danger-color;
    border-color: $danger-color;
  }

  &--info {
    color: $info-color;
    border-color: $info-color;
  }

  &--text {
    color: $text-color;
    border-color: $text-color;
  }
}

.ebs-switch {
  border-radius: rem(8px);
  height: rem(16px);
  width: rem(32px);
  position: relative;
  cursor: pointer;

  &--unchecked {
    background-color: $border-color;

    .ebs-switch__dot {
      border-color: $border-color;
      background-color: $white;
      box-shadow: 0px 0px 0px 2px $grey-500 inset;
    }

    &:hover .ebs-switch__dot {
      border-color: var(--primary-200);
      box-shadow: 0px 0px 0px 2px var(--primary-color inset);
    }
  }

  &--unchecked.disabled {
    cursor: not-allowed;
    background-color: $border-color;

    .ebs-switch__dot,
    .ebs-switch__dot:hover {
      background-color: $white;
      border-color: $border-color;
    }
  }

  &--checked {
    background-color: var(--primary-200);

    .ebs-switch__dot {
      transform: translate(16px, -50%);
      background-color: var(--primary-400);
      border-color: var(--primary-200);
    }

    &:hover .ebs-switch__dot {
      border-color: var(--primary-300);
      box-shadow: 0px 0px 0px 2px var(--primary-color inset);
    }
  }

  &--checked.disabled {
    cursor: not-allowed;
    background-color: var(--primary-100);

    .ebs-switch__dot,
    .ebs-switch__dot:hover {
      box-shadow: 0px 0px 0px 2px var(--primary-400 inset);
      background-color: var(--primary-300);
      border-color: var(--primary-100);
    }
  }

  &__dot {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translate(0, -50%);
    width: rem(16px);
    height: rem(16px);
    border: 2px solid transparent;
    box-shadow: 0px 0px 0px 2px var(--primary-color inset);
    border-radius: 50%;
    overflow: hidden;
    transition: all $transition-time;
  }

  &__checked-sheet {
    border-radius: rem(25px);
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }
}

.ebs-chips {
  cursor: pointer;
  position: relative;
  padding: rem(4px 8px);
  font-size: rem(12px);
  border: 1px solid transparent;
  border-radius: rem(16px);
  background-color: transparent;
  transition: all $transition-time;

  &--checked {
    background-color: var(--primary-000);
    border-color: var(--primary-color);
    color: var(--primary-color);

    &:hover {
      background-color: var(--primary-color);
      border-color: var(--primary-color);
      color: $white;

      .ebs-icon {
        color: $white;
      }
    }
  }

  &--unchecked {
    background-color: transparent;
    border-color: $text-color-light;
    color: $text-color-secondary;

    &:hover {
      background-color: transparent;
      border-color: var(--primary-400);
      color: var(--primary-400);
    }
  }

  &__prefix {
    position: absolute;
    left: rem(9px);
    top: calc(50% + 1px);
    transform: translateY(-50%);
  }

  &__prefix .ebs-icon {
    font-size: rem(12px);
  }

  &__suffix {
    position: absolute;
    right: rem(9px);
    top: calc(50% + 1px);
    transform: translateY(-50%);
  }

  &__suffix .ebs-icon {
    font-size: rem(12px);
  }

  &.has-prefix {
    padding-left: rem(28px);
  }

  &.has-suffix {
    padding-right: rem(28px);
  }

  &.disabled {
    cursor: not-allowed;
  }

  &.disabled,
  &.disabled:hover {
    background-color: $border-color;
    border-color: $border-color;
    color: $grey-500;
  }

  &.disabled,
  &.disabled:hover {
    background-color: transparent;
    border-color: $border-color;
    color: $border-color;
  }
}

.ebs-radio__group {
  &.vertical {
    display: flex;
    flex-wrap: wrap;
  }

  &.ebs-radio__align--left {
    .ebs-radio {
      right: inherit;
      left: 0;

      &__text {
        padding-left: rem(26px);
      }
    }
  }

  &.ebs-radio__align--right {
    .ebs-radio {
      left: inherit;
      right: 0;

      &__text {
        padding-right: rem(26px);
        width: rem(160px);
      }
    }
  }

  .ebs-radio__wrapper {
    position: relative;

    &:not(:last-child) {
      margin-bottom: rem(5px);
    }

    &.has-text .ebs-radio {
      position: absolute;
      top: rem(-2px);
    }

    &.disabled {
      .ebs-radio__input {
        cursor: not-allowed;
      }

      .ebs-radio__text {
        color: $grey-500;
      }

      .ebs-radio,
      .ebs-radio__input:hover ~ .ebs-radio {
        background-color: transparent;

        &__dot {
          border: 1px solid $border-color;
          box-shadow: none;
          background-color: transparent;
        }
      }

      .ebs-radio__input:checked ~ .ebs-radio,
      .ebs-radio__input:checked:hover ~ .ebs-radio {
        background-color: transparent;

        &__dot {
          border: 1px solid $grey-500;
          box-shadow: 0px 0px 0px 3px $white inset;
          background-color: $grey-500;
        }
      }
    }
  }

  .ebs-radio__input {
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    opacity: 0;
    cursor: pointer;

    &:hover ~ .ebs-radio {
      background-color: var(--primary-100);

      &__dot {
        border-color: var(--primary-color);
        background-color: var(--primary-100);
      }
    }

    &:checked:hover ~ .ebs-radio {
      background-color: var(--primary-100);

      &__dot {
        border-color: var(--primary-color);
        background-color: var(--primary-color);
        box-shadow: 0px 0px 0px 3px var(--primary-100 inset);
      }
    }

    &:checked ~ .ebs-radio .ebs-radio__dot {
      border-color: var(--primary-color);
      background-color: var(--primary-color);
      box-shadow: 0px 0px 0px 3px $white inset;
    }
  }

  .ebs-radio {
    transition: all $transition-time;
    width: rem(20px);
    height: rem(20px);
    background-color: transparent;
    pointer-events: none;
    border-radius: 50%;

    &__dot {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: rem(16px);
      height: rem(16px);
      border: 1px solid $border-color;
      border-radius: 50%;
      background-color: transparent;
    }

    &__text {
      pointer-events: none;
      color: $text-color;
      font-size: rem(14px);
    }
  }
}

.ebs-tooltip {
  $self: &;

  &--inline {
    display: inline-block;
    #{$self}__trigger {
      display: inline-block;
    }
  }

  &--nowrap {
    #{$self}__body,
    #{$self}__body-title {
      white-space: nowrap;
    }
  }

  &__trigger {
    margin: calc(#{rem(-$gutter-size)} / 2);
    padding: calc(#{rem($gutter-size)} / 2);
  }

  &__wrapper.ebs-tooltip--overtop {
    z-index: 9999;
  }

  &__wrapper {
    @include elevation-2;
    background-color: $white;
    border-radius: rem($border-radius);
    z-index: 9997;
    color: $text-color;
    background-color: $white;
  }

  &__body {
    padding: rem($gutter-size);
    font-size: rem($gutter-size);
    @include fadeAnimation;

    &-title {
      color: $heading-color;
      font-size: rem($font-size-base);
      margin-bottom: rem($border-radius);
      @include fontMedium;
    }
  }

  &__arrow {
    font-size: rem($gutter-size);
    display: inline-block;
    height: 1em;
    width: 1em;
  }

  &__arrow path {
    fill: $white;
  }

  &__wrapper[data-popper-placement*='top'],
  &__wrapper[data-popper-placement*='bottom'] {
    margin: calc(#{rem(-$gutter-size)} / 4 - 1px) 0;
  }

  &__wrapper[data-popper-placement*='left'],
  &__wrapper[data-popper-placement*='right'] {
    margin: 0 calc(#{rem(-$gutter-size)} / 4 - 1px);
  }

  &__wrapper[data-popper-placement*='top'] &__arrow {
    bottom: calc(-1em / 2);
    svg {
      transform: translateY(-1px) rotate(180deg);
    }
  }

  &__wrapper[data-popper-placement*='bottom'] &__arrow {
    top: rem(-1em);
    svg {
      transform: translateY(-1px) rotate(0deg);
    }
  }

  &__wrapper[data-popper-placement*='right'] &__arrow {
    left: calc(-1em / 2 - 5px);
    svg {
      transform: translateX(1px) rotate(-90deg);
    }
  }

  &__wrapper[data-popper-placement*='left'] &__arrow {
    right: calc(-1em / 2 + 5px);
    svg {
      transform: translateX(1px) rotate(90deg);
    }
  }
}

// Add common style
@mixin card-size {
  .ebs-card__header,
  .ebs-card__body,
  .ebs-card__footer {
    @content;
  }
}

.ebs-card {
  width: 100%;
  border: 1px solid $card-border-color;
  border-radius: $card-border-radius;
  background-color: #fff;
  overflow: hidden;
  box-shadow: $card-box-shadow;

  &--collapsed {
    .ebs-card__header {
      border-bottom: 0;
    }
  }

  &__header {
    background-color: $card-header-bg-color;
    border-bottom: 1px solid $card-border-color;

    &--bordered {
      border-bottom: 2px solid $card-bordered-color;
    }

    &__collapsible {
      display: flex;
      width: 100%;
      justify-content: space-between;
    }

    &__content {
      flex: 1;
    }

    &__toggle {
      padding-left: rem(12px);
      @include flex-center;

      &:hover {
        cursor: pointer;
      }

      .ebs-icon {
        font-size: rem(14px);
        color: $grey-600;
      }
    }
  }

  &__body {
    background-color: $card-body-bg-color;
    transition: padding 400ms;
  }

  &__footer {
    background-color: $card-footer-bg-color;
    border-top: 1px solid $card-border-color;

    &--bordered {
      border-top: 2px solid $card-bordered-color;
    }
  }

  // Size
  &--small {
    @include card-size {
      padding: rem($card-padding-y-sm $card-padding-x-sm);
    }
  }

  &--medium {
    @include card-size {
      padding: rem($card-padding-y $card-padding-x);
    }
  }

  &--large {
    @include card-size {
      padding: rem($card-padding-y-lg $card-padding-x-lg);
    }
  }
}

.ebs-mask {
  position: fixed;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9998;
  animation: fadeIn 0.3s forwards;
  background: rgba(0, 0, 0, 0.4);
}

// Add common style
@mixin collapse-size {
  .ebs-collapse__header,
  .ebs-collapse__body {
    @content;
  }
}

.ebs-collapse {
  width: 100%;
  border: 1px solid $collapse-border-color;
  border-radius: rem($collapse-border-radius);
  background-color: #fff;
  overflow: hidden;

  &__header {
    background-color: $collapse-header-bg-color;
    border-bottom: 1px solid $collapse-border-color;
    width: 100%;
    display: flex;
    justify-content: space-between;

    &:hover {
      cursor: pointer;
    }

    &--collapsed {
      border-bottom: 0;
    }

    &--bordered:not(&.ebs-collapse__header--collapsed) {
      border-bottom: 2px solid $collapse-bordered-color;
    }

    // Content
    &__title {
      flex: 1;
    }

    &__toggle {
      padding-left: rem(12px);
      @include flex-center;

      &:hover {
        cursor: pointer;
      }

      .ebs-icon {
        font-size: rem(14px);
        color: $grey-600;
      }
    }
  }

  &__body {
    background-color: $collapse-body-bg-color;
    transition: padding 400ms;
  }

  // Group
  &__group {
    width: 100%;
    border: 1px solid $collapse-border-color;
    border-radius: rem($collapse-border-radius);
    box-shadow: $collapse-group-box-shadow;
    overflow: hidden;

    .ebs-collapse {
      border: 0;
      border-radius: 0;

      &:not(:last-child) {
        border-bottom: 1px solid $collapse-border-color;
      }
    }
  }

  // Size
  &--small {
    @include collapse-size {
      padding: rem($collapse-padding-y-sm $collapse-padding-x-sm);
    }
  }

  &--medium {
    @include collapse-size {
      padding: rem($collapse-padding-y $collapse-padding-x);
    }
  }

  &--large {
    @include collapse-size {
      padding: rem($collapse-padding-y-lg $collapse-padding-x-lg);
    }
  }
}

.container,
.container-fluid,
.container-xxl,
.container-xl,
.container-lg,
.container-md,
.container-sm {
  width: 100%;
  height: 100%;
  padding-right: var(--bs-gutter-x, 0.75rem);
  padding-left: var(--bs-gutter-x, 0.75rem);
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: #{ $grid-sm-size + 36 }) {
  .container-sm,
  .container {
    max-width: rem($grid-sm-size);
  }
}
@media (min-width: #{ $grid-md-size + 49 }) {
  .container-md,
  .container-sm,
  .container {
    max-width: rem($grid-md-size);
  }
}
@media (min-width: #{ $grid-lg-size + 32 }) {
  .container-lg,
  .container-md,
  .container-sm,
  .container {
    max-width: rem($grid-lg-size);
  }
}
@media (min-width: #{ $grid-xl-size + 60 }) {
  .container-xl,
  .container-lg,
  .container-md,
  .container-sm,
  .container {
    max-width: rem($grid-xl-size);
  }
}
@media (min-width: calc(#{$grid-xxl-size} + 80px)) {
  .container-xxl,
  .container-xl,
  .container-lg,
  .container-md,
  .container-sm,
  .container {
    max-width: rem($grid-xxl-size);
  }
}
.row {
  --bs-gutter-x: 1.5rem;
  --bs-gutter-y: 0;
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--bs-gutter-y) * -1);
  margin-right: calc(var(--bs-gutter-x) / -2);
  margin-left: calc(var(--bs-gutter-x) / -2);
}
.row > * {
  box-sizing: border-box;
  flex-shrink: 0;
  width: 100%;
  max-width: 100%;
  padding-right: calc(var(--bs-gutter-x) / 2);
  padding-left: calc(var(--bs-gutter-x) / 2);
  margin-top: var(--bs-gutter-y);
}

.col {
  flex: 1 0 0%;
}

.row-cols-auto > * {
  flex: 0 0 auto;
  width: auto;
}

.row-cols-1 > * {
  flex: 0 0 auto;
  width: 100%;
}

.row-cols-2 > * {
  flex: 0 0 auto;
  width: 50%;
}

.row-cols-3 > * {
  flex: 0 0 auto;
  width: 33.3333333333%;
}

.row-cols-4 > * {
  flex: 0 0 auto;
  width: 25%;
}

.row-cols-5 > * {
  flex: 0 0 auto;
  width: 20%;
}

.row-cols-6 > * {
  flex: 0 0 auto;
  width: 16.6666666667%;
}

.col-auto {
  flex: 0 0 auto;
  width: auto;
}

.col-1 {
  flex: 0 0 auto;
  width: 8.3333333333%;
}

.col-2 {
  flex: 0 0 auto;
  width: 16.6666666667%;
}

.col-3 {
  flex: 0 0 auto;
  width: 25%;
}

.col-4 {
  flex: 0 0 auto;
  width: 33.3333333333%;
}

.col-5 {
  flex: 0 0 auto;
  width: 41.6666666667%;
}

.col-6 {
  flex: 0 0 auto;
  width: 50%;
}

.col-7 {
  flex: 0 0 auto;
  width: 58.3333333333%;
}

.col-8 {
  flex: 0 0 auto;
  width: 66.6666666667%;
}

.col-9 {
  flex: 0 0 auto;
  width: 75%;
}

.col-10 {
  flex: 0 0 auto;
  width: 83.3333333333%;
}

.col-11 {
  flex: 0 0 auto;
  width: 91.6666666667%;
}

.col-12 {
  flex: 0 0 auto;
  width: 100%;
}

.offset-1 {
  margin-left: 8.3333333333%;
}

.offset-2 {
  margin-left: 16.6666666667%;
}

.offset-3 {
  margin-left: 25%;
}

.offset-4 {
  margin-left: 33.3333333333%;
}

.offset-5 {
  margin-left: 41.6666666667%;
}

.offset-6 {
  margin-left: 50%;
}

.offset-7 {
  margin-left: 58.3333333333%;
}

.offset-8 {
  margin-left: 66.6666666667%;
}

.offset-9 {
  margin-left: 75%;
}

.offset-10 {
  margin-left: 83.3333333333%;
}

.offset-11 {
  margin-left: 91.6666666667%;
}

.g-0,
.gx-0 {
  --bs-gutter-x: 0;
}

.g-0,
.gy-0 {
  --bs-gutter-y: 0;
}

.g-1,
.gx-1 {
  --bs-gutter-x: 0.25rem;
}

.g-1,
.gy-1 {
  --bs-gutter-y: 0.25rem;
}

.g-2,
.gx-2 {
  --bs-gutter-x: 0.5rem;
}

.g-2,
.gy-2 {
  --bs-gutter-y: 0.5rem;
}

.g-3,
.gx-3 {
  --bs-gutter-x: 1rem;
}

.g-3,
.gy-3 {
  --bs-gutter-y: 1rem;
}

.g-4,
.gx-4 {
  --bs-gutter-x: 1.5rem;
}

.g-4,
.gy-4 {
  --bs-gutter-y: 1.5rem;
}

.g-5,
.gx-5 {
  --bs-gutter-x: 3rem;
}

.g-5,
.gy-5 {
  --bs-gutter-y: 3rem;
}

@media (min-width: calc(#{$grid-sm-size} + 32px)) {
  .col-sm {
    flex: 1 0 0%;
  }

  .row-cols-sm-auto > * {
    flex: 0 0 auto;
    width: auto;
  }

  .row-cols-sm-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }

  .row-cols-sm-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }

  .row-cols-sm-3 > * {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .row-cols-sm-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }

  .row-cols-sm-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }

  .row-cols-sm-6 > * {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-sm-auto {
    flex: 0 0 auto;
    width: auto;
  }

  .col-sm-1 {
    flex: 0 0 auto;
    width: 8.3333333333%;
  }

  .col-sm-2 {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-sm-3 {
    flex: 0 0 auto;
    width: 25%;
  }

  .col-sm-4 {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .col-sm-5 {
    flex: 0 0 auto;
    width: 41.6666666667%;
  }

  .col-sm-6 {
    flex: 0 0 auto;
    width: 50%;
  }

  .col-sm-7 {
    flex: 0 0 auto;
    width: 58.3333333333%;
  }

  .col-sm-8 {
    flex: 0 0 auto;
    width: 66.6666666667%;
  }

  .col-sm-9 {
    flex: 0 0 auto;
    width: 75%;
  }

  .col-sm-10 {
    flex: 0 0 auto;
    width: 83.3333333333%;
  }

  .col-sm-11 {
    flex: 0 0 auto;
    width: 91.6666666667%;
  }

  .col-sm-12 {
    flex: 0 0 auto;
    width: 100%;
  }

  .offset-sm-0 {
    margin-left: 0;
  }

  .offset-sm-1 {
    margin-left: 8.3333333333%;
  }

  .offset-sm-2 {
    margin-left: 16.6666666667%;
  }

  .offset-sm-3 {
    margin-left: 25%;
  }

  .offset-sm-4 {
    margin-left: 33.3333333333%;
  }

  .offset-sm-5 {
    margin-left: 41.6666666667%;
  }

  .offset-sm-6 {
    margin-left: 50%;
  }

  .offset-sm-7 {
    margin-left: 58.3333333333%;
  }

  .offset-sm-8 {
    margin-left: 66.6666666667%;
  }

  .offset-sm-9 {
    margin-left: 75%;
  }

  .offset-sm-10 {
    margin-left: 83.3333333333%;
  }

  .offset-sm-11 {
    margin-left: 91.6666666667%;
  }

  .g-sm-0,
  .gx-sm-0 {
    --bs-gutter-x: 0;
  }

  .g-sm-0,
  .gy-sm-0 {
    --bs-gutter-y: 0;
  }

  .g-sm-1,
  .gx-sm-1 {
    --bs-gutter-x: 0.25rem;
  }

  .g-sm-1,
  .gy-sm-1 {
    --bs-gutter-y: 0.25rem;
  }

  .g-sm-2,
  .gx-sm-2 {
    --bs-gutter-x: 0.5rem;
  }

  .g-sm-2,
  .gy-sm-2 {
    --bs-gutter-y: 0.5rem;
  }

  .g-sm-3,
  .gx-sm-3 {
    --bs-gutter-x: 1rem;
  }

  .g-sm-3,
  .gy-sm-3 {
    --bs-gutter-y: 1rem;
  }

  .g-sm-4,
  .gx-sm-4 {
    --bs-gutter-x: 1.5rem;
  }

  .g-sm-4,
  .gy-sm-4 {
    --bs-gutter-y: 1.5rem;
  }

  .g-sm-5,
  .gx-sm-5 {
    --bs-gutter-x: 3rem;
  }

  .g-sm-5,
  .gy-sm-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: #{ $grid-md-size + 49 }) {
  .col-md {
    flex: 1 0 0%;
  }

  .row-cols-md-auto > * {
    flex: 0 0 auto;
    width: auto;
  }

  .row-cols-md-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }

  .row-cols-md-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }

  .row-cols-md-3 > * {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .row-cols-md-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }

  .row-cols-md-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }

  .row-cols-md-6 > * {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-md-auto {
    flex: 0 0 auto;
    width: auto;
  }

  .col-md-1 {
    flex: 0 0 auto;
    width: 8.3333333333%;
  }

  .col-md-2 {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-md-3 {
    flex: 0 0 auto;
    width: 25%;
  }

  .col-md-4 {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .col-md-5 {
    flex: 0 0 auto;
    width: 41.6666666667%;
  }

  .col-md-6 {
    flex: 0 0 auto;
    width: 50%;
  }

  .col-md-7 {
    flex: 0 0 auto;
    width: 58.3333333333%;
  }

  .col-md-8 {
    flex: 0 0 auto;
    width: 66.6666666667%;
  }

  .col-md-9 {
    flex: 0 0 auto;
    width: 75%;
  }

  .col-md-10 {
    flex: 0 0 auto;
    width: 83.3333333333%;
  }

  .col-md-11 {
    flex: 0 0 auto;
    width: 91.6666666667%;
  }

  .col-md-12 {
    flex: 0 0 auto;
    width: 100%;
  }

  .offset-md-0 {
    margin-left: 0;
  }

  .offset-md-1 {
    margin-left: 8.3333333333%;
  }

  .offset-md-2 {
    margin-left: 16.6666666667%;
  }

  .offset-md-3 {
    margin-left: 25%;
  }

  .offset-md-4 {
    margin-left: 33.3333333333%;
  }

  .offset-md-5 {
    margin-left: 41.6666666667%;
  }

  .offset-md-6 {
    margin-left: 50%;
  }

  .offset-md-7 {
    margin-left: 58.3333333333%;
  }

  .offset-md-8 {
    margin-left: 66.6666666667%;
  }

  .offset-md-9 {
    margin-left: 75%;
  }

  .offset-md-10 {
    margin-left: 83.3333333333%;
  }

  .offset-md-11 {
    margin-left: 91.6666666667%;
  }

  .g-md-0,
  .gx-md-0 {
    --bs-gutter-x: 0;
  }

  .g-md-0,
  .gy-md-0 {
    --bs-gutter-y: 0;
  }

  .g-md-1,
  .gx-md-1 {
    --bs-gutter-x: 0.25rem;
  }

  .g-md-1,
  .gy-md-1 {
    --bs-gutter-y: 0.25rem;
  }

  .g-md-2,
  .gx-md-2 {
    --bs-gutter-x: 0.5rem;
  }

  .g-md-2,
  .gy-md-2 {
    --bs-gutter-y: 0.5rem;
  }

  .g-md-3,
  .gx-md-3 {
    --bs-gutter-x: 1rem;
  }

  .g-md-3,
  .gy-md-3 {
    --bs-gutter-y: 1rem;
  }

  .g-md-4,
  .gx-md-4 {
    --bs-gutter-x: 1.5rem;
  }

  .g-md-4,
  .gy-md-4 {
    --bs-gutter-y: 1.5rem;
  }

  .g-md-5,
  .gx-md-5 {
    --bs-gutter-x: 3rem;
  }

  .g-md-5,
  .gy-md-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: calc(#{$grid-lg-size} + 32px)) {
  .col-lg {
    flex: 1 0 0%;
  }

  .row-cols-lg-auto > * {
    flex: 0 0 auto;
    width: auto;
  }

  .row-cols-lg-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }

  .row-cols-lg-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }

  .row-cols-lg-3 > * {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .row-cols-lg-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }

  .row-cols-lg-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }

  .row-cols-lg-6 > * {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-lg-auto {
    flex: 0 0 auto;
    width: auto;
  }

  .col-lg-1 {
    flex: 0 0 auto;
    width: 8.3333333333%;
  }

  .col-lg-2 {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-lg-3 {
    flex: 0 0 auto;
    width: 25%;
  }

  .col-lg-4 {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .col-lg-5 {
    flex: 0 0 auto;
    width: 41.6666666667%;
  }

  .col-lg-6 {
    flex: 0 0 auto;
    width: 50%;
  }

  .col-lg-7 {
    flex: 0 0 auto;
    width: 58.3333333333%;
  }

  .col-lg-8 {
    flex: 0 0 auto;
    width: 66.6666666667%;
  }

  .col-lg-9 {
    flex: 0 0 auto;
    width: 75%;
  }

  .col-lg-10 {
    flex: 0 0 auto;
    width: 83.3333333333%;
  }

  .col-lg-11 {
    flex: 0 0 auto;
    width: 91.6666666667%;
  }

  .col-lg-12 {
    flex: 0 0 auto;
    width: 100%;
  }

  .offset-lg-0 {
    margin-left: 0;
  }

  .offset-lg-1 {
    margin-left: 8.3333333333%;
  }

  .offset-lg-2 {
    margin-left: 16.6666666667%;
  }

  .offset-lg-3 {
    margin-left: 25%;
  }

  .offset-lg-4 {
    margin-left: 33.3333333333%;
  }

  .offset-lg-5 {
    margin-left: 41.6666666667%;
  }

  .offset-lg-6 {
    margin-left: 50%;
  }

  .offset-lg-7 {
    margin-left: 58.3333333333%;
  }

  .offset-lg-8 {
    margin-left: 66.6666666667%;
  }

  .offset-lg-9 {
    margin-left: 75%;
  }

  .offset-lg-10 {
    margin-left: 83.3333333333%;
  }

  .offset-lg-11 {
    margin-left: 91.6666666667%;
  }

  .g-lg-0,
  .gx-lg-0 {
    --bs-gutter-x: 0;
  }

  .g-lg-0,
  .gy-lg-0 {
    --bs-gutter-y: 0;
  }

  .g-lg-1,
  .gx-lg-1 {
    --bs-gutter-x: 0.25rem;
  }

  .g-lg-1,
  .gy-lg-1 {
    --bs-gutter-y: 0.25rem;
  }

  .g-lg-2,
  .gx-lg-2 {
    --bs-gutter-x: 0.5rem;
  }

  .g-lg-2,
  .gy-lg-2 {
    --bs-gutter-y: 0.5rem;
  }

  .g-lg-3,
  .gx-lg-3 {
    --bs-gutter-x: 1rem;
  }

  .g-lg-3,
  .gy-lg-3 {
    --bs-gutter-y: 1rem;
  }

  .g-lg-4,
  .gx-lg-4 {
    --bs-gutter-x: 1.5rem;
  }

  .g-lg-4,
  .gy-lg-4 {
    --bs-gutter-y: 1.5rem;
  }

  .g-lg-5,
  .gx-lg-5 {
    --bs-gutter-x: 3rem;
  }

  .g-lg-5,
  .gy-lg-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: #{ $grid-xl-size + 60 }) {
  .col-xl {
    flex: 1 0 0%;
  }

  .row-cols-xl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }

  .row-cols-xl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }

  .row-cols-xl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }

  .row-cols-xl-3 > * {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .row-cols-xl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }

  .row-cols-xl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }

  .row-cols-xl-6 > * {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-xl-auto {
    flex: 0 0 auto;
    width: auto;
  }

  .col-xl-1 {
    flex: 0 0 auto;
    width: 8.3333333333%;
  }

  .col-xl-2 {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-xl-3 {
    flex: 0 0 auto;
    width: 25%;
  }

  .col-xl-4 {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .col-xl-5 {
    flex: 0 0 auto;
    width: 41.6666666667%;
  }

  .col-xl-6 {
    flex: 0 0 auto;
    width: 50%;
  }

  .col-xl-7 {
    flex: 0 0 auto;
    width: 58.3333333333%;
  }

  .col-xl-8 {
    flex: 0 0 auto;
    width: 66.6666666667%;
  }

  .col-xl-9 {
    flex: 0 0 auto;
    width: 75%;
  }

  .col-xl-10 {
    flex: 0 0 auto;
    width: 83.3333333333%;
  }

  .col-xl-11 {
    flex: 0 0 auto;
    width: 91.6666666667%;
  }

  .col-xl-12 {
    flex: 0 0 auto;
    width: 100%;
  }

  .offset-xl-0 {
    margin-left: 0;
  }

  .offset-xl-1 {
    margin-left: 8.3333333333%;
  }

  .offset-xl-2 {
    margin-left: 16.6666666667%;
  }

  .offset-xl-3 {
    margin-left: 25%;
  }

  .offset-xl-4 {
    margin-left: 33.3333333333%;
  }

  .offset-xl-5 {
    margin-left: 41.6666666667%;
  }

  .offset-xl-6 {
    margin-left: 50%;
  }

  .offset-xl-7 {
    margin-left: 58.3333333333%;
  }

  .offset-xl-8 {
    margin-left: 66.6666666667%;
  }

  .offset-xl-9 {
    margin-left: 75%;
  }

  .offset-xl-10 {
    margin-left: 83.3333333333%;
  }

  .offset-xl-11 {
    margin-left: 91.6666666667%;
  }

  .g-xl-0,
  .gx-xl-0 {
    --bs-gutter-x: 0;
  }

  .g-xl-0,
  .gy-xl-0 {
    --bs-gutter-y: 0;
  }

  .g-xl-1,
  .gx-xl-1 {
    --bs-gutter-x: 0.25rem;
  }

  .g-xl-1,
  .gy-xl-1 {
    --bs-gutter-y: 0.25rem;
  }

  .g-xl-2,
  .gx-xl-2 {
    --bs-gutter-x: 0.5rem;
  }

  .g-xl-2,
  .gy-xl-2 {
    --bs-gutter-y: 0.5rem;
  }

  .g-xl-3,
  .gx-xl-3 {
    --bs-gutter-x: 1rem;
  }

  .g-xl-3,
  .gy-xl-3 {
    --bs-gutter-y: 1rem;
  }

  .g-xl-4,
  .gx-xl-4 {
    --bs-gutter-x: 1.5rem;
  }

  .g-xl-4,
  .gy-xl-4 {
    --bs-gutter-y: 1.5rem;
  }

  .g-xl-5,
  .gx-xl-5 {
    --bs-gutter-x: 3rem;
  }

  .g-xl-5,
  .gy-xl-5 {
    --bs-gutter-y: 3rem;
  }
}
@media (min-width: 1400px) {
  .col-xxl {
    flex: 1 0 0%;
  }

  .row-cols-xxl-auto > * {
    flex: 0 0 auto;
    width: auto;
  }

  .row-cols-xxl-1 > * {
    flex: 0 0 auto;
    width: 100%;
  }

  .row-cols-xxl-2 > * {
    flex: 0 0 auto;
    width: 50%;
  }

  .row-cols-xxl-3 > * {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .row-cols-xxl-4 > * {
    flex: 0 0 auto;
    width: 25%;
  }

  .row-cols-xxl-5 > * {
    flex: 0 0 auto;
    width: 20%;
  }

  .row-cols-xxl-6 > * {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-xxl-auto {
    flex: 0 0 auto;
    width: auto;
  }

  .col-xxl-1 {
    flex: 0 0 auto;
    width: 8.3333333333%;
  }

  .col-xxl-2 {
    flex: 0 0 auto;
    width: 16.6666666667%;
  }

  .col-xxl-3 {
    flex: 0 0 auto;
    width: 25%;
  }

  .col-xxl-4 {
    flex: 0 0 auto;
    width: 33.3333333333%;
  }

  .col-xxl-5 {
    flex: 0 0 auto;
    width: 41.6666666667%;
  }

  .col-xxl-6 {
    flex: 0 0 auto;
    width: 50%;
  }

  .col-xxl-7 {
    flex: 0 0 auto;
    width: 58.3333333333%;
  }

  .col-xxl-8 {
    flex: 0 0 auto;
    width: 66.6666666667%;
  }

  .col-xxl-9 {
    flex: 0 0 auto;
    width: 75%;
  }

  .col-xxl-10 {
    flex: 0 0 auto;
    width: 83.3333333333%;
  }

  .col-xxl-11 {
    flex: 0 0 auto;
    width: 91.6666666667%;
  }

  .col-xxl-12 {
    flex: 0 0 auto;
    width: 100%;
  }

  .offset-xxl-0 {
    margin-left: 0;
  }

  .offset-xxl-1 {
    margin-left: 8.3333333333%;
  }

  .offset-xxl-2 {
    margin-left: 16.6666666667%;
  }

  .offset-xxl-3 {
    margin-left: 25%;
  }

  .offset-xxl-4 {
    margin-left: 33.3333333333%;
  }

  .offset-xxl-5 {
    margin-left: 41.6666666667%;
  }

  .offset-xxl-6 {
    margin-left: 50%;
  }

  .offset-xxl-7 {
    margin-left: 58.3333333333%;
  }

  .offset-xxl-8 {
    margin-left: 66.6666666667%;
  }

  .offset-xxl-9 {
    margin-left: 75%;
  }

  .offset-xxl-10 {
    margin-left: 83.3333333333%;
  }

  .offset-xxl-11 {
    margin-left: 91.6666666667%;
  }

  .g-xxl-0,
  .gx-xxl-0 {
    --bs-gutter-x: 0;
  }

  .g-xxl-0,
  .gy-xxl-0 {
    --bs-gutter-y: 0;
  }

  .g-xxl-1,
  .gx-xxl-1 {
    --bs-gutter-x: 0.25rem;
  }

  .g-xxl-1,
  .gy-xxl-1 {
    --bs-gutter-y: 0.25rem;
  }

  .g-xxl-2,
  .gx-xxl-2 {
    --bs-gutter-x: 0.5rem;
  }

  .g-xxl-2,
  .gy-xxl-2 {
    --bs-gutter-y: 0.5rem;
  }

  .g-xxl-3,
  .gx-xxl-3 {
    --bs-gutter-x: 1rem;
  }

  .g-xxl-3,
  .gy-xxl-3 {
    --bs-gutter-y: 1rem;
  }

  .g-xxl-4,
  .gx-xxl-4 {
    --bs-gutter-x: 1.5rem;
  }

  .g-xxl-4,
  .gy-xxl-4 {
    --bs-gutter-y: 1.5rem;
  }

  .g-xxl-5,
  .gx-xxl-5 {
    --bs-gutter-x: 3rem;
  }

  .g-xxl-5,
  .gy-xxl-5 {
    --bs-gutter-y: 3rem;
  }
}

.align-flex-end {
  @include flex-items-end;
}

.ebs-avatar {
  @include elevation-1;
  @include flex-center;
  position: relative;
  border-radius: rem($border-radius);

  &--circle,
  &--circle &__img {
    border-radius: 50%;
  }

  &--regular {
    color: var(--primary-color);
    background-color: $grey-100;

    .ebs-icon {
      color: var(--primary-color);
    }
  }

  &--primary {
    color: $white;
    background-color: var(--primary-color);

    .ebs-icon {
      color: $white;
    }
  }

  &--light {
    color: $text-color;
    background-color: $white;

    .ebs-icon {
      color: $text-color;
    }
  }

  &--dynamic {
    color: $white;

    .ebs-icon {
      color: $white;
    }
  }

  &--small {
    min-width: rem($avatar-size-small);
    width: rem($avatar-size-small);
    min-height: rem($avatar-size-small);
    height: rem($avatar-size-small);
  }

  &--small &-short-alt {
    font-size: rem($avatar-font-small);
  }

  &--big {
    min-width: rem($avatar-size-big);
    width: rem($avatar-size-big);
    min-height: rem($avatar-size-big);
    height: rem($avatar-size-big);
  }

  &--big &-short-alt {
    font-size: rem($avatar-font-big);
  }

  &__short-alt {
    @include flex-center;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    white-space: nowrap;
    font-weight: $avatar-short-alt-font-weight;
  }

  &__img {
    position: relative;
    width: 100%;
    height: 100%;
    z-index: 1;
    border-radius: $border-radius;
    object-fit: cover;
    @include fadeAnimation;
  }

  &__status {
    position: absolute;
    bottom: rem(-2.5px);
    right: rem(-2.5px);
    width: rem(10px);
    height: rem(10px);
    border: 2px solid #fff;
    border-radius: 50%;
    z-index: 2;

    &--active {
      background-color: $avatar-status-active;
    }

    &--regular {
      background-color: var(--primary-color);
    }

    &--inactive {
      background-color: $avatar-status-uanctive;
    }
  }

  &__card {
    display: inline-flex;
    align-items: center;
    background-color: #f9f9f9;
    border: 1px solid #dfddd6;
    border-radius: rem($border-radius);

    &-alt {
      color: #333;
      padding: 0 calc(#{rem($gutter-size)} / 2);
      border-top-right-radius: rem($border-radius);
      border-bottom-right-radius: rem($border-radius);
      font-size: rem(9px);
      font-weight: $avatar-card-alt-font-weight;
    }

    img {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }

    .ebs-avatar {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      height: rem(23px);
      width: rem(23px);
    }
  }

  &__inline {
    display: flex;
    align-items: center;
    text-align: left;

    &--reversed &-alt {
      margin-left: 0;
      margin-right: rem($gutter-size);
    }

    &-alt {
      margin-left: rem($gutter-size);
      font-size: rem(12px);
      color: $black;
      overflow: hidden;
      font-weight: $avatar-inline-alt-font-weight;
    }

    &--light &-alt {
      color: $white;
    }

    &-description {
      @include text-ellipsis;
      font-size: rem(10px);
      color: $avatar-description-color;
    }
  }
}

.ebs-alert {
  position: relative;
  display: flex;
  border: $alert-border;
  border-radius: rem($alert-border-radius);
  background-color: $alert-success-color;
  padding: rem($alert-padding-y $alert-padding-x);

  &--outlined {
    background-color: white;

    &.ebs-alert--warning {
      background-color: white;
    }

    &.ebs-alert--error {
      background-color: white;
      .ebs-icon {
        path:last-child {
          fill: white;
        }
      }
    }

    &.ebs-alert--info {
      background-color: white;
    }
  }

  &-content {
    align-self: center;
    width: 100%;
  }

  .ebs-icon {
    min-width: rem($alert-icon-size);
    min-height: rem($alert-icon-size);
    margin-right: rem($alert-icon-margin);
    color: $success-color;

    &-close {
      min-width: unset;
      min-height: unset;
      cursor: pointer;
    }
  }

  &--info {
    border: $alert-border--info;
    background-color: $alert-info-color;

    .ebs-icon {
      color: $info-600;
    }
  }

  &--warning {
    border: $alert-border--warning;
    background-color: $alert-warning-color;

    .ebs-icon {
      color: $warning-600;
    }
  }

  &--error {
    border: $alert-border--danger;
    background-color: $alert-danger-color;

    .ebs-icon {
      color: $danger-600;

      path:last-child {
        fill: rgba($danger-200, 0.3);
      }
    }
  }

  &--hidden {
    display: none;
  }
}

.ebs-badge {
  @include flex-center-vert;

  min-width: rem($badge-min-size);
  min-height: rem($badge-min-size);

  &__container {
    @include flex-center;
    @include elevation-1;
    @include fadeAnimation;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 2;
    background-color: $badge-regular-bg-color;
    width: rem($badge-size);
    height: rem($badge-size);
    color: $black;
    border-radius: rem($badge-border-radius);
    padding: rem($badge-padding);
    font-size: rem($badge-font-size);
    font-weight: $badge-font-weight;
    transform: $badge-transform;

    &--text {
      width: auto;
      padding: rem($badge-text-padding);
      border-radius: rem($badge-text-border-radius);
    }
  }

  &__container + *:not(.ebs-button__wrapper) {
    margin: 0 5px;
  }

  & span {
    @include flex-center;
    position: relative;

    > .ebs-icon {
      font-size: rem($badge-size);
    }
  }

  &__type--success &__container {
    background-color: $badge-success-bg-color;
    color: $white;
  }

  &__type--info &__container {
    background-color: $badge-info-bg-color;
    color: $white;
  }

  &__type--warning &__container {
    background-color: $badge-warning-bg-color;
    color: $white;
  }

  &__type--danger &__container {
    background-color: $badge-danger-bg-color;
    color: $white;
  }

  .ebs-sidebar__prefix > & {
    position: absolute;
    left: rem(20px);
    top: 50%;
    transform: translateY(-50%);
    font-size: rem(18px);

    .ebs-icon {
      position: unset;
      left: unset;
      top: unset;
      transform: unset;
      margin-left: 0;
    }
  }
}

.ebs-tabs {
  display: flex;
  border: $tab-border;
  border-bottom: $tab-border-bottom;
  white-space: nowrap;
  overflow: auto hidden;
}

.ebs-tabs__item {
  cursor: pointer;
  margin: rem($tab-item-margin);
  padding: rem($tab-item-padding);

  &.active {
    border-bottom: $tab-item-border-bottom-active;
  }

  &.disabled {
    color: $tab-item-disabled-color;
    cursor: initial;
  }
}

.ebs-tabs__content {
  padding: rem($tab-content-padding);
}

.ebs-space {
  display: flex;

  &--vertical {
    flex-direction: column;
  }

  &__align {
    &--center {
      align-items: center;
    }
    &--start {
      align-items: flex-start;
    }
    &--end {
      align-items: flex-end;
    }
    &--baseline {
      align-items: baseline;
    }
  }

  &__justify {
    &--center {
      justify-content: center;
    }
    &--start {
      justify-content: flex-start;
    }
    &--end {
      justify-content: flex-end;
    }
    &--space-between {
      justify-content: space-between;
    }
    &--space-around {
      justify-content: space-around;
    }
  }
  &__display--inline {
    display: inline-flex;
  }
}

.ebs-space__item {
  &:empty {
    display: none;
  }
}



// Molecules
/*** IMPORTED FILE NOT FOUND ***/
@import 'rc-input-number/assets/index.css';/*** --- ***/

.ebs-stepper__wrapper {
  &.active .ebs-stepper,
  &.active .ebs-stepper:hover {
    border-color: var(--primary-color);
    background-color: $white;

    .rc-input-number-handler-wrap {
      border-color: var(--primary-color);
    }

    .rc-input-number-input {
      color: $heading-color;
    }
  }

  &.has-error .ebs-stepper,
  &.has-error .rc-input-number-handler-wrap {
    border-color: $danger-color;
  }

  &.has-error .ebs-stepper__extra {
    color: $danger-color;
  }

  &.disabled .ebs-stepper__label {
    color: $grey-500;
  }

  &.disabled .ebs-stepper,
  &.disabled .ebs-stepper:hover {
    border-color: $grey-500;

    &.rc-input-number-disabled .rc-input-number-input {
      background-color: $white;

      @include placeholder {
        color: $grey-500;
      }
    }

    .rc-input-number-handler-wrap,
    .rc-input-number-handler-wrap:hover {
      border-color: $grey-500;
      color: $grey-500;
    }
  }

  .ebs-stepper {
    width: 100%;
    height: rem($base-size);
    border: 1px solid $border-color;
    background-color: $white;
    border-radius: rem($border-radius);

    &:focus,
    &:hover,
    &.rc-input-number-focused {
      box-shadow: inherit;
      outline: none;
    }

    &:hover {
      border-color: $border-color;

      .rc-input-number-handler-wrap {
        border-color: $border-color;
      }
    }

    &.rc-input-number-focused {
      border-color: var(--primary-color);
      background-color: $white;

      .rc-input-number-handler-wrap {
        border-color: var(--primary-color);
      }

      .rc-input-number-input {
        color: $heading-color;
      }
    }

    // Label
    &__label {
      margin-bottom: rem(5px);
      color: $text-color;
      @include fontRegular;
      font-size: rem(12px);
    }

    // Extra
    &__extra {
      margin-top: rem(2.5px);
      color: $text-color-secondary;
      @include fontRegular;
      font-size: rem(10px);
    }

    .rc-input-number-handler-wrap {
      border-color: $border-color;
      width: rem(30px);
    }

    .rc-input-number-handler {
      height: 50%;
      width: 100%;
    }

    .rc-input-number-handler > * {
      font-size: rem(8px);
    }

    .rc-input-number-handler.rc-input-number-handler-up,
    .rc-input-number-handler.rc-input-number-handler-down {
      position: relative;

      .ebs-icon {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        color: $text-color;
      }
    }

    .rc-input-number-handler.rc-input-number-handler-up {
      border-bottom-color: transparent;

      .ebs-icon {
        bottom: rem(2px);
      }
    }

    .rc-input-number-handler.rc-input-number-handler-down {
      border-bottom-color: transparent;

      .ebs-icon {
        top: rem(2px);
        transform: translateX(-50%) rotate(180deg);
      }
    }

    .rc-input-number-input-wrap .rc-input-number-input {
      padding: rem(10px);
      text-align: left;
      color: $heading-color;
      font-size: rem(14px);

      @include placeholder {
        color: $text-color-secondary;
      }
    }
  }

  &.left .rc-input-number-handler-wrap {
    float: left;
    border-left-width: 0px;
    border-right-width: 1px;
    border-right-style: solid;
  }

  &.right .rc-input-number-handler-wrap {
    float: right;
    border-right-width: 0px;
    border-left-width: 1px;
    border-left-style: solid;
  }
}

.ebs-textarea {
  @include fontRegular;
  font-size: rem(14px);
  padding: rem(10px);
  min-height: rem(80px);
  width: 100%;
  outline: none;
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  background-color: $white;
  color: $heading-color;

  @include placeholder {
    color: $text-color-secondary;
  }

  &.has-value {
    border-color: var(--primary-color);
  }

  &.has-error {
    border-color: $danger-color;
  }

  &.disabled {
    border-color: $grey-500;
  }

  // Label
  &__label {
    @include fontRegular;

    color: $text-color;
    margin-bottom: rem(5px);
    font-size: rem(12px);
  }

  &__label.disabled {
    color: $grey-500;
  }

  // Extra
  &__extra {
    @include fontRegular;

    color: $text-color-secondary;
    margin-top: rem(2.5px);
    font-size: rem(10px);
  }

  &__extra.has-error {
    color: $danger-color;
  }

  &__extra.disabled {
    color: $grey-500;
  }
}

// animations
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes loaderFade {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.ebs-loader {
  position: relative;
  z-index: 2;

  &,
  .fade-in {
    animation: $animation-base;
    transition: opacity $transition-time;
  }

  &__inline {
    color: $text-color-secondary;
    @include fontRegular;
    @include flex-center;
    font-size: rem(14px);
  }

  &__inline &__spinner {
    position: relative;
    display: inline-block;
    margin-right: rem(7.5px);
  }

  & > &__spinner {
    position: absolute;
  }

  & > &__spinner.fixed {
    position: fixed;
  }

  &__spinner {
    width: rem(#{$base-size});
    height: rem(#{$base-size});
    border-radius: 50%;

    transition-property: transform;
    animation-name: rotate;
    animation-duration: 1.2s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;

    &--small {
      border: 2px solid $grey-500;
      border-top: 2px solid var(--primary-color);
      width: calc(#{rem($base-size)} / 2);
      height: calc(#{rem($base-size)} / 2);
      top: calc(50% - #{rem($base-size)} / 4);
    }

    &--middle {
      border: 2px solid $grey-500;
      border-top: 2px solid var(--primary-color);
      width: rem(#{$base-size - $gutter-size});
      height: rem(#{$base-size - $gutter-size});
      top: calc(50% - #{$base-size - $gutter-size} / 2);
      left: calc(50% - #{$base-size - $gutter-size} / 2);
    }

    &--regular {
      border: 6px solid $grey-500;
      border-top: 6px solid var(--primary-color);
      width: rem(#{$base-size * 2});
      height: rem(#{$base-size * 2});
      top: calc(50% - #{$base-size});
      left: calc(50% - #{$base-size});
    }
  }
}

/*** IMPORTED FILE NOT FOUND ***/
@import 'react-phone-input-2/lib/style.css';/*** --- ***/

.react-tel-input.ebs-input__phone {
  position: relative;

  &.active .form-control,
  &.active .flag-dropdown {
    border-color: var(--primary-color);
    background-color: $white;
    color: $heading-color;
  }

  &.disabled .form-control,
  &.disabled .flag-dropdown {
    border-color: $grey-500;
    background-color: $white;
    color: $grey-500;
    cursor: not-allowed;

    @include placeholder {
      color: $grey-500;
    }
  }

  &.has-error .form-control,
  &.has-error .flag-dropdown {
    border-color: $danger-color;
    background-color: $white;
  }

  &-dropdown.country-list {
    padding: rem(4px);
    @include hiddenScroll;
    @include elevation-2;
    border-radius: rem($border-radius);

    .country {
      font-size: rem(14px);
      color: $text-color;
      padding: rem(6px);
      @include fontRegular;
    }

    .country.highlight,
    .country:hover,
    .country[aria-selected='true'] {
      background-color: var(--primary-000);
      border-radius: rem($border-radius);
    }

    .country[aria-selected='true'] {
      color: var(--primary-color);

      .dial-code {
        color: var(--primary-400);
      }
    }

    .country .dial-code {
      color: $text-color-secondary;
    }
  }

  .form-control {
    width: 100%;
    border-radius: rem($border-radius);
    height: rem($base-size);
    font-size: rem($font-size-base);

    @include placeholder {
      color: $text-color-secondary;
    }
  }

  .form-control,
  .flag-dropdown {
    border: 1px solid $border-color;
    background-color: $white;
  }

  &-dropdown {
    &::-webkit-scrollbar {
      width: rem($scrollbar-size) !important;
      height: rem($scrollbar-size) !important;
    }

    /* Track */
    &::-webkit-scrollbar-track {
      background: $scrollbar-track-background-color !important;
    }

    /* Handle */
    &::-webkit-scrollbar-thumb {
      background: $scrollbar-thumb-background-color !important;
    }

    /* Handle on hover */
    &::-webkit-scrollbar-thumb:hover {
      background: $scrollbar-thumb-hover-background-color !important;
    }
  }
}

.ebs-input__phone {
  &-dropdown {
    @include fadeAnimation;
  }

  &-wrapper__container {
    position: relative;
  }

  &__clear {
    position: absolute;
    cursor: pointer;
    top: 50%;
    color: $text-color;
    right: calc(#{rem($gutter-size)} / 2);
    font-size: rem(22px);
    padding: rem(0 7px);
    margin: rem(0 -7px);
    transform: translate3d(0, -50%, 0);
  }

  // Sizes
  &--small .react-tel-input .form-control {
    height: rem($base-size-sm);
  }
  &--large .react-tel-input .form-control {
    height: rem($base-size-lg);
  }
}

.ebs-checkbox__wrapper {
  position: relative;
  cursor: pointer;

  &.indeterminate {
    .ebs-checkbox__input:checked ~ .ebs-checkbox {
      .ebs-checkbox__check {
        font-size: rem(10px);
      }

      .ebs-checkbox__indeterminate {
        font-size: 0;
      }
    }

    .ebs-checkbox {
      border-color: var(--primary-color);
      background-color: var(--primary-color);

      .ebs-checkbox__check {
        font-size: 0;
      }

      .ebs-checkbox__indeterminate {
        font-size: rem(10px);
      }
    }
  }

  &.disabled .ebs-checkbox__input {
    cursor: not-allowed;
  }

  &.disabled .ebs-checkbox__input:checked ~ .ebs-checkbox,
  &.disabled .ebs-checkbox__input:checked:hover ~ .ebs-checkbox {
    border-color: $grey-500;
    background-color: $grey-500;

    &:before {
      background-color: transparent;
    }
  }

  &.disabled .ebs-checkbox,
  &.disabled .ebs-checkbox__input:hover ~ .ebs-checkbox {
    border-color: $grey-500;
    background-color: transparent;

    &:before {
      background-color: transparent;
    }
  }

  &.disabled .ebs-checkbox__text {
    color: $grey-500;
  }

  &.has-text .ebs-checkbox {
    position: absolute;
    top: rem(-2px);
  }

  &.ebs-checkbox--left .ebs-checkbox {
    right: inherit;
    left: 0;

    &__text {
      padding-left: rem(26px);
    }
  }

  &.ebs-checkbox--right .ebs-checkbox {
    left: inherit;
    right: 0;

    &__text {
      padding-right: rem(26px);
      width: rem(160px);
    }
  }
}

.ebs-checkbox__input {
  opacity: 0;
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  cursor: pointer;

  &:checked {
    ~ .ebs-checkbox {
      border-color: var(--primary-color);
      background-color: var(--primary-color);
    }

    ~ .ebs-checkbox .ebs-checkbox__check {
      font-size: rem(10px);
      color: $white;
    }

    &:hover ~ .ebs-checkbox {
      border-color: var(--primary-color);
      background-color: var(--primary-color);

      &:before {
        background-color: var(--primary-100);
      }
    }
  }

  &:hover ~ .ebs-checkbox {
    border-color: var(--primary-color);

    &:before {
      background-color: var(--primary-100);
    }
  }
}

.ebs-checkbox {
  position: relative;
  width: rem(14px);
  height: rem(14px);
  margin: rem(3px);
  background-color: transparent;
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  transition: all $transition-time;
  pointer-events: none;

  &:before {
    content: ' ';
    display: block;
    position: absolute;
    width: rem(20px);
    height: rem(20px);
    left: 50%;
    top: 50%;
    background-color: transparent;
    transform: translate(-50%, -50%);
    border-radius: rem($border-radius);
    z-index: -1;
  }

  &__check,
  &__indeterminate {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    font-size: 0;
    color: $white;
  }

  &__indeterminate rect {
    fill: $white;
  }

  &__text {
    color: $text-color;
    font-size: rem(14px);
  }

  &__group &__wrapper:not(:last-child) {
    margin-bottom: rem(5px);
  }
}

// TODO use these in Checkbox.scss

@mixin checkbox-hover() {
  border-color: var(--primary-color);

  &:before {
    background-color: var(--primary-100);
  }
}

@mixin checkbox-checked-hover() {
  border-color: var(--primary-color);
  background-color: var(--primary-color);

  &:before {
    background-color: var(--primary-100);
  }
}

.ebs-input__search-wrapper {
  &.ebs-input__search--fill {
    .ebs-input__search,
    .ebs-input__wrapper--active {
      background-color: $grey-100;
    }
  }

  &.ebs-input__search--transparent {
    .ebs-input__search,
    .ebs-input__wrapper--active {
      background-color: transparent;
      border-color: transparent;
      color: $white;

      .ebs-input,
      .ebs-icon {
        color: $white;

        @include placeholder {
          color: $white;
        }
      }
    }
  }

  &.disabled .cursor {
    cursor: not-allowed;
  }

  .ebs-input__clear {
    right: rem($gutter-size * 2);
  }
}

.upload {
  color: $text-color;

  &__container {
    margin-top: 10px;
    display: flex;
    align-items: flex-start;
  }

  &__file {
    @include text-ellipsis;
    width: 100%;

    &__remove {
      margin-right: 10px;

      &:hover {
        cursor: pointer;
      }
      .ebs-icon {
        color: $text-color;
      }
    }
    &__name {
      font-weight: 600;
      margin-bottom: 7px;
      font-size: rem(13px);
      color: $text-color;
    }
    &__size {
      min-width: 80px;
      margin-right: 10px;
    }
  }

  &__status {
    @include flex-center-vert;
    font-size: rem(12px);
    font-weight: 500;
  }

  &__progress {
    @include flex-center-vert;
    width: 100%;

    &__text {
      margin-right: 10px;
    }
    &__bar {
      background-color: var(--primary-color);
      flex-grow: 0;
      height: 4px;
      border-radius: 4px;
    }
  }

  &__error {
    color: $danger-color;
  }
}

@keyframes toast-in-right {
  from {
    transform: translateX(100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes toast-in-left {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

.ebs-notify {
  @include flex-center-column;
  box-sizing: border-box;
  position: absolute;
  overflow: hidden auto;
  z-index: 9999;
  max-height: 100%;
  width: rem($notify-width);
  padding: rem($gutter-size);

  > .ebs-space__item {
    width: 100%;
  }

  .ebs-icon {
    color: $notify-color;
  }

  &--top-right {
    top: 0;
    right: 0;
  }

  &--top-right &__item {
    transition: transform 0.6s ease-in-out;
    animation: toast-in-right 0.7s;
  }

  &--bottom-right {
    bottom: 0;
    right: 0;
  }

  &--bottom-right &__item {
    transition: transform 0.6s ease-in-out;
    animation: toast-in-right 0.7s;
  }

  &--top-left {
    top: 0;
    left: 0;
  }

  &--top-left &__item {
    transition: transform 0.6s ease-in;
    animation: toast-in-left 0.7s;
  }

  &--bottom-left {
    bottom: 0;
    left: 0;
  }

  &--bottom-left &__item {
    transition: transform 0.6s ease-in;
    animation: toast-in-left 0.7s;
  }

  &__item {
    position: relative;
    color: $notify-color;
    padding: rem($notify-padding);
    border-radius: $notify-border-radius;
    box-shadow: $notify-box-shadow;

    &-close {
      position: absolute;
      right: 0;
      top: calc(#{rem($gutter-size)} / 4);
    }

    &--regular {
      background-color: $white;
      color: $text-color;

      .ebs-icon {
        color: var(--primary-color);
      }
    }

    &--primary {
      background-color: var(--primary-color);
    }

    &--success {
      background-color: $success-color;
    }

    &--danger {
      background-color: $danger-color;

      .ebs-icon {
        color: $white;
      }
    }

    &--info {
      background-color: $info-color;
    }

    &--warning {
      background-color: $warning-color;
    }

    .ebs-icon:not(.ebs-icon--close) {
      font-size: rem($gutter-size * 1.5);
    }
  }
}

/*** IMPORTED FILE NOT FOUND ***/
@import 'react-datepicker/dist/react-datepicker.css';/*** --- ***/

// DatePicker wrapper
.ebs-datepicker__wrapper {
  &.react-datepicker-wrapper {
    display: inline-flex;
    width: 100%;
  }

  // Icon
  .react-datepicker__input-container {
    position: relative;
    overflow: hidden;

    &:before {
      content: '';
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 16 16' fill='none'%3E%3Cpath d='M12 3.33325H3.99996C3.26358 3.33325 2.66663 3.93021 2.66663 4.66659V12.6666C2.66663 13.403 3.26358 13.9999 3.99996 13.9999H12C12.7363 13.9999 13.3333 13.403 13.3333 12.6666V4.66659C13.3333 3.93021 12.7363 3.33325 12 3.33325Z' stroke='%23494F7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M10.6666 2V4.66667' stroke='%23494F7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M5.33337 2V4.66667' stroke='%23494F7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M2.66663 7.33325H13.3333' stroke='%23494F7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M7.33337 10H8.00004' stroke='%23494F7D' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3Cpath d='M8 10V12' stroke='currentColor' stroke-width='1.5' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A");
      width: rem($base-size);
      height: 100%;
      position: absolute;
      background-repeat: no-repeat;
      background-position: center;
      right: 0;
    }
  }

  // Clear icon
  .react-datepicker__close-icon {
    &::after {
      background-color: white;
      border-radius: 0;
      color: $text-color;
      font-size: rem(22px);
      height: rem(20px);
      display: inline-block;
      overflow: hidden;
    }
    padding-right: rem(6px);
  }
}

// DataPicker Input
.ebs-datepicker {
  width: 100%;
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  outline: none;
  font-size: rem(14px);
  padding-right: rem($base-size);
  padding: rem($calendar-padding-y $calendar-padding-x);
  color: $heading-color;
  box-sizing: border-box;
  min-height: 100%;
  transition: $transition-base;

  @include text-ellipsis;

  @include placeholder {
    color: $text-color-secondary;
  }

  &__popper {
    @include fadeAnimation;
  }

  &:disabled {
    border-color: $grey-500;
    background-color: $white;
    color: $grey-500;
    cursor: not-allowed;

    @include placeholder {
      color: $grey-500;
    }

    @include hover-state {
      border-color: $grey-500;
      background-color: $white;
    }
  }

  @include hover-state {
    border-color: var(--primary-color);
    background-color: $white;
  }

  // Error
  &.has-error {
    border-color: $danger-color;
  }

  // Sizes
  &--small {
    $padding-y: $calendar-padding-y-sm - 1px; // 1px is the border-width
    min-height: rem($base-size-sm);

    font-size: rem(12px);
    padding: rem($padding-y $calendar-padding-x-sm);
    padding-right: rem($base-size-sm);
  }
  &--medium {
    $padding-y: $calendar-padding-y - 1px; // 1px is the border-width
    min-height: rem($base-size);

    padding: rem($padding-y $calendar-padding-x);
    padding-right: rem($base-size);
  }
  &--large {
    $padding-y: $calendar-padding-y-lg - 1px; // 1px is the border-width
    min-height: rem($base-size-lg);

    padding: rem($padding-y $calendar-padding-x-lg);
    padding-right: rem($base-size-lg);
  }
}

// RangePicker
.ebs-rangepicker {
  display: inline-flex;
  width: 100%;

  &.is-opened {
    .ebs-datepicker {
      border-color: var(--primary-color);
    }
    .react-datepicker-wrapper:first-child {
      .ebs-datepicker {
        border-right-color: var(--primary-color);
      }
    }
  }

  &:not(.disabled) {
    @include hover-state {
      .ebs-datepicker {
        border-color: var(--primary-color);
      }
      .react-datepicker-wrapper:first-child {
        .ebs-datepicker {
          border-right-color: var(--primary-color);
        }
      }
    }
  }

  .react-datepicker-wrapper {
    display: inline-flex;

    &:not(:first-child) {
      .ebs-datepicker {
        border-left: inherit;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
    }

    &:first-child {
      .ebs-datepicker {
        border-right: 1px solid $border-color;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
    }
  }
}

.react-datepicker__year-select {
  border: none;
}

// DatePicker Popper
.react-datepicker-popper.ebs-datepicker__popper,
.react-datepicker.ebs-datepicker__calendar {
  z-index: 999999;

  * {
    outline: 0;
  }

  .react-datepicker {
    @include elevation-2;
    border-color: $border-color;
    display: flex;

    &__time-list,
    &__year-dropdown {
      @include hiddenScroll;
    }

    &__time-list-item:hover {
      background-color: var(--primary-100);
      color: $text-color;
    }

    &__time-list-item--disabled {
      display: none;
    }

    &__time-list-item--selected,
    &__time-list-item--selected:hover {
      background-color: var(--primary-color);
      color: $white;
    }

    &__navigation {
      content: '';

      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 8 12' fill='currentColor' class='ebs-icon ebs-icon-size-small ebs-icon__arrow-right '%3E%3Cpath fill-rule='evenodd' d='M1.052,-0.003 C1.317,-0.003 1.581,0.098 1.783,0.300 L6.721,5.263 C7.120,5.663 7.120,6.309 6.721,6.710 L1.783,11.672 C1.382,12.074 0.731,12.077 0.328,11.677 C-0.076,11.278 -0.078,10.628 0.322,10.225 L4.541,5.986 L0.322,1.748 C-0.078,1.345 -0.076,0.695 0.328,0.295 C0.528,0.097 0.790,-0.003 1.052,-0.003 Z'%3E%3C/path%3E%3C/svg%3E");

      background-size: 80%;
      background-repeat: no-repeat;
      background-position: center;
      width: rem(15px);
      height: rem(15px);
      border: none;

      &-icon::before {
        display: none;
      }
    }

    &__navigation--previous {
      transform: rotate(180deg);
    }

    // FIXME: Fix arrow position on full
    &__triangle {
      display: none;
      // border-bottom-color: $white !important;

      // &::before {
      //   border-bottom-color: $border-color !important;
      // }
    }

    &__time-container {
      border-color: $border-color;
    }

    &__time ul li {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    &__navigation {
      background-size: 50%;
      padding: rem(10px);
      top: rem(5px);
    }

    &__navigation--years {
      top: unset;
    }

    &__navigation--years-upcoming {
      transform: rotate(-90deg);
    }

    &__navigation--years-previous {
      transform: rotate(90deg);
    }

    &__year-option--selected {
      font-size: rem(16px);
      width: rem(16px);
      line-height: 1.25;
    }

    &__year-read-view--down-arrow {
      border: none;
      top: rem(7px);
    }

    &__year-read-view--down-arrow:before {
      border: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 8 12' fill='currentColor' class='ebs-icon ebs-icon-size-small ebs-icon__arrow-right '%3E%3Cpath fill-rule='evenodd' d='M1.052,-0.003 C1.317,-0.003 1.581,0.098 1.783,0.300 L6.721,5.263 C7.120,5.663 7.120,6.309 6.721,6.710 L1.783,11.672 C1.382,12.074 0.731,12.077 0.328,11.677 C-0.076,11.278 -0.078,10.628 0.322,10.225 L4.541,5.986 L0.322,1.748 C-0.078,1.345 -0.076,0.695 0.328,0.295 C0.528,0.097 0.790,-0.003 1.052,-0.003 Z'%3E%3C/path%3E%3C/svg%3E");
      background-size: 50%;
      background-repeat: no-repeat;
      background-position: center;
      width: rem(15px);
      height: rem(15px);
      left: auto;
      top: auto;
      bottom: auto;
      z-index: unset;
      transform: rotate(90deg) translate3d(-50%, 50%, 0);
    }

    &__header {
      background: transparent;
      border: none;
    }

    &__year-read-view {
      padding: rem(5px 10px);
    }

    &__day-name {
      font-weight: 600;
      margin: 0;
      width: rem(30px);
      height: rem(30px);
      display: inline-flex;
      justify-content: center;
      align-items: center;
    }

    &__month {
      margin: rem(0 15px 15px);
    }

    &__day {
      margin: 0;
      width: rem(30px);
      height: rem(30px);
      display: inline-flex;
      justify-content: center;
      align-items: center;
      border-radius: 0;
      color: $text-color;
    }

    &__day:hover {
      background-color: var(--primary-100);
    }

    &__day--in-range {
      background-color: var(--primary-100);
    }

    &__day--in-selecting-range {
      background-color: var(--primary-000);
    }

    &__day--selected,
    &__day--selected:hover,
    &__day--keyboard-selected,
    &__day--keyboard-selected:hover,
    &__day--range-start,
    &__day--range-end {
      border-radius: rem($border-radius);
      background-color: var(--primary-color);
      color: $white;
    }
  }

  .react-datepicker__year-dropdown,
  .react-datepicker__month-dropdown,
  .react-datepicker__month-year-dropdown {
    color: $text-color;
    background-color: $white;
    border-color: $border-color;

    @include elevation-2;
  }
  .react-datepicker__year-option,
  .react-datepicker__month-option,
  .react-datepicker__month-year-option {
    font-weight: 500;
    color: $text-color;

    @include hover-state {
      background-color: var(--primary-100);
    }
  }

  .react-datepicker__time-container
    .react-datepicker__time
    .react-datepicker__time-box
    ul.react-datepicker__time-list
    li.react-datepicker__time-list-item {
    @include hover-state {
      background-color: var(--primary-100);
    }
  }

  .react-datepicker__time-container
    .react-datepicker__time
    .react-datepicker__time-box
    ul.react-datepicker__time-list
    li.react-datepicker__time-list-item--selected {
    background-color: var(--primary-color);
  }
}

.react-datepicker.ebs-datepicker__calendar {
  border: 1px solid $border-color;
}

.react-datepicker__year-dropdown {
  @include fadeAnimation;
}

.ebs-select {
  @include flex-center-vert;
  flex: auto;
  position: relative;
  cursor: pointer;
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  height: 100%;
  font-size: rem(14px);
  background-color: $white;
  overflow: hidden;

  &.has-suffix {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  &--box {
    .ebs-select {
      position: relative;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;
    }

    .ebs-select__options {
      position: relative;
      box-shadow: none;
      border: 1px solid $border-color;
      border-top: none;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }
  }

  &--tags {
    .ebs-select-value .ebs-input {
      padding: 0;
    }
  }

  &--box &__clear {
    margin-right: 0;
  }

  &--inline {
    .ebs-select-value__container {
      flex-wrap: nowrap;
      overflow: auto hidden;

      &::-webkit-scrollbar {
        display: none;
      }
    }
  }

  &__prefix {
    border: $select-prefix-border-right;
    border-right: none;
    border-radius: rem($border-radius);
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    padding: rem($select-padding-prefix-y $select-padding-prefix-x);
    @include flex-center-vert;
  }

  &__prefix + & {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  &__suffix {
    .ebs-button__wrapper {
      @include flex-center;
      border-left: none;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      height: 100%;

      .ebs-button {
        padding-top: 0;
        padding-bottom: 0;
      }
    }
  }

  &__clear {
    @include close-icon-container;
  }

  &__clear {
    font-size: rem(22px);
  }

  &__suffix {
    color: $text-color;
    margin-left: 0.5rem;
    display: flex;
    align-items: center;

    .ebs-icon {
      font-size: rem(10px);
    }
  }

  &--multiple &-value {
    text-overflow: unset;
  }

  &-value {
    @include flex-center-vert;
    @include text-ellipsis;
    @include hiddenScroll;
    color: $text-color-secondary;
    width: 100%;
    margin-right: calc(#{rem($gutter-size)} / 2);
    min-height: 1em;

    .ebs-input__container {
      z-index: 2;
      padding-left: calc(#{rem($gutter-size)} / 4);
      min-width: rem(80px);

      .ebs-input__wrapper {
        border: none;
      }
    }

    &__container {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      min-height: rem($base-size - ($gutter-size - 6px));
      margin: rem(-4px 0);
      padding: rem(4px 0);

      > *,
      > .ebs-select-label {
        margin-top: rem(4px);
        margin-bottom: rem(4px);
      }

      > .ebs-select-label {
        padding-left: rem($label-font-size);
      }

      .ebs-select__clear {
        font-weight: 100;
        color: var(--primary-color);
      }
    }

    .ebs-label__suffix {
      margin-top: rem(-1px);
      right: calc(#{rem($label-font-size)} / 2);
    }
  }

  &-label {
    position: relative;
    font-size: rem(12px);
    height: 100%;
    margin-bottom: 0;
  }

  &-label:not(:last-child) {
    margin-right: calc(#{rem($label-font-size)} / 2);
  }

  &__wrapper {
    &.disabled .ebs-select-dropdown__wrapper .ebs-select {
      cursor: not-allowed;
      border-color: $grey-500;

      .ebs-select-value {
        color: $grey-500;
      }
    }

    &.active {
      .ebs-select__prefix {
        border-color: var(--primary-color);
      }

      .ebs-select-dropdown__wrapper .ebs-select {
        border-color: var(--primary-color);
        background-color: $white;

        .ebs-select-value {
          color: $heading-color;
        }
      }

      .ebs-select__suffix {
        .ebs-button__wrapper {
          border-color: var(--primary-color);
        }
      }
    }

    .ebs-icon {
      color: $heading-color;
    }

    .ebs-tooltip,
    .ebs-tooltip__wrapper {
      width: 100%;
    }
  }

  // Sizes
  &--small {
    font-size: rem(12px);
    padding: rem(0 $select-padding-x-sm);
    min-height: rem($base-size-sm);

    // FIXME: Temporary hack
    .ebs-select-value:empty {
      height: rem($base-size-sm - $select-padding-y-sm * 2);
    }
  }

  &--medium {
    padding: rem(0 $select-padding-x);
    min-height: rem($base-size);

    // FIXME: Temporary hack
    .ebs-select-value:empty {
      height: rem($base-size - $select-padding-y * 2);
    }
  }

  &--large {
    padding: rem(0 $select-padding-x-lg);
    min-height: rem($base-size-lg);

    // FIXME: Temporary hack
    .ebs-select-value:empty {
      height: rem($base-size-lg - $select-padding-y-lg * 2);
    }
  }

  &__pagination {
    border-top: 1px solid $border-color;
    padding: rem(6px 8px 1px);
  }

  .ebs-loader__inline {
    font-size: rem(12px);
  }

  .ebs-loader__spinner {
    float: left;
    top: 0;
  }

  .ebs-select-value {
    .ebs-avatar__inline {
      &-alt {
        margin-left: calc(#{rem($gutter-size)} / 2);
      }

      > .ebs-avatar {
        width: rem($font-size-base * 1.5);
        height: rem($font-size-base * 1.5);
        min-width: unset;
        min-height: unset;
      }
    }

    .ebs-label .ebs-avatar__inline {
      margin-left: rem(-$label-font-size);
    }
  }
}

.ebs-select-dropdown {
  &__wrapper {
    position: relative;
    display: flex;
    flex-wrap: wrap;
  }

  &__container {
    position: relative;
    display: flex;
    width: 100%;
  }
}

.ebs-select__options {
  position: relative;
  width: 100%;
  padding: rem(4px);
  background-color: $white;
  border: 1px solid $white;
  border-radius: rem($border-radius);
  overflow: hidden;

  &--multiple &-item-text {
    padding-right: calc(#{rem($gutter-size)} + #{rem($gutter-size)} / 2);
  }

  & > &-search,
  &-search.ebs-input__wrapper--active {
    margin-bottom: rem(4px);
    border-color: $grey-100;
    background-color: $grey-100;
  }

  & > &-items {
    height: auto;
    overflow: hidden auto;

    .ebs-select__options-item:not(:last-child) {
      margin-bottom: rem(4px);
    }
  }

  & &--empty {
    color: $grey-500;
    text-align: center;
    margin: rem(5px 0);
    font-size: rem(12px);
  }

  .ebs-input__search-wrapper {
    margin-bottom: rem(4px);
  }
}

.ebs-select__options-item {
  position: relative;
  padding: rem(6px 8px);
  border-radius: rem($border-radius);
  cursor: pointer;
  transition: all 0.3s;

  &.has-prefix {
    padding-left: rem(32.5px);
  }

  &.active {
    background-color: var(--primary-000);
  }

  &.active &-text {
    color: var(--primary-color);
  }

  &.selected {
    background-color: var(--primary-000);
  }

  &.selected &-suffix,
  &.selected &-prefix {
    .ebs-checkbox__wrapper .ebs-checkbox {
      @include checkbox-hover;
    }
  }

  &:hover {
    background-color: var(--primary-000);

    .ebs-select__options-item-text {
      color: var(--primary-color);
    }

    &-suffix,
    &-prefix {
      .ebs-checkbox__wrapper .ebs-checkbox,
      .ebs-checkbox__wrapper .ebs-checkbox {
        @include checkbox-hover;
      }

      .ebs-checkbox__wrapper .ebs-checkbox__input:checked ~ .ebs-checkbox,
      .ebs-checkbox__wrapper .ebs-checkbox__input:checked ~ .ebs-checkbox {
        @include checkbox-checked-hover;
      }
    }
  }

  &-prefix,
  &-suffix {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    color: $text-color;
  }

  &-prefix {
    left: rem(10px);
  }

  &-suffix {
    right: rem(10px);
  }

  &-text {
    color: $text-color;
    font-size: rem(14px);
    line-height: 140%;
  }
}



// Organisms
.ebs-action__wrapper {
  width: rem($gutter-size);
  font-size: rem($gutter-size);
}

.ebs-action__tooltip {
  min-width: rem($actions-tooltip-min-width);
  padding: rem($actions-tooltip-padding);
  max-height: rem($actions-tooltip-height);
  overflow: hidden auto;

  &-title {
    @include fontMedium;
    font-size: rem($actions-tooltip-title-font-size);
    padding: rem($actions-tooltip-title-padding);
    border-bottom: $actions-border;
    color: $actions-tooltip-title-color;
  }

  &-item {
    @include fontMedium;
    cursor: pointer;
    position: relative;
    padding: rem($actions-tooltip-item-padding);
    font-size: rem($actions-tooltip-item-font-size);
    transition: $transition-time;

    &:hover {
      background-color: $background-content;
      color: $link-hover-color;
    }
  }

  &-item .loader-display {
    display: inline-block;
    margin-right: calc(#{rem($gutter-size)} / 2);
    vertical-align: middle;
  }

  &-icon {
    cursor: pointer;
    display: block;
    color: $text-color;

    &:hover {
      color: var(--primary-color);
    }
  }
}

.ebs-form {
  &--vertical {
    .ebs-form__field__label {
      margin-bottom: rem(4px);
    }
  }

  // Commons for all items
  &__item {
    &:empty {
      display: none;
    }
    &:not(:last-child) {
      margin-bottom: rem($field-margin-bottom);
    }
  }

  &__field {
    // Label
    &__label {
      display: flex;
      font-size: rem($field-label-font-size);
      font-weight: $field-label-font-weight;
      color: $field-label-color;
      height: 100%;
    }

    // Extra
    &__extra {
      color: $field-extra-color;
    }

    // Errors
    &__error {
      color: $danger-color;
      list-style: none;
      padding: 0;
      margin: rem(2px) 0 0;
    }

    // Common for extra and error
    &__explain {
      font-size: rem($field-label-font-size);
      font-weight: $field-label-font-weight;
      margin-top: rem(2px);
    }

    // Required
    &__required {
      color: $danger-color;
      margin-left: rem(3px);
      line-height: 1;
    }
  }
}

/*** IMPORTED FILE NOT FOUND ***/
@import 'rc-table/assets/index.css';/*** --- ***/

.rc-table.ebs-table {
  box-shadow: $table-box-shadow;

  // FIXME: Fix table on mobile
  // @include mq($until: desktop) {
  //   display: none;
  // }

  &--small td {
    padding: rem($base-size $gutter-size);
  }

  &__th--filtered {
    cursor: pointer;
    transition: $transition-time;

    &-desc .ebs-icon {
      transform: rotate(180deg);
    }

    &:hover,
    &-asc,
    &-desc {
      color: $table-filter-active-color;

      .ebs-icon {
        color: $table-filter-active-color;
      }
    }

    .ebs-icon {
      position: relative;
      top: 0;
      color: currentColor;
      font-size: rem($table-body-font-size);
      transition: $transition-time;
      margin-left: rem(6px);
    }
  }

  .is-action {
    width: rem(80px);

    .ebs-action__wrapper {
      float: right;
    }
  }

  .rc-table-thead tr:first-child th.rc-table-cell {
    border-top: none;
  }

  .rc-table-thead tr:not(:first-child) th.rc-table-cell {
    border: $table-border;
    border-top: none;
    border-right: none;
    border-bottom: $table-head-cell-bottom-border;
  }

  .rc-table-tbody tr.rc-table-row {
    td.rc-table-cell {
      word-break: normal;
      border: $table-body-cell-border;
      transition: $transition-time;
      text-align: $table-body-cell-text-align;
      font-size: rem($table-body-font-size);
      white-space: nowrap;

      &:not(:last-child) {
        border-right: none;
      }
    }

    &:nth-child(odd) td.rc-table-cell {
      background-color: $table-body-cell-odd-background;
    }

    &:hover:nth-child(odd) td.rc-table-cell,
    &:hover:nth-child(even) td.rc-table-cell {
      background-color: $table-body-cell-hover-background;
    }

    &:last-child td {
      border-bottom: $table-border;
    }
  }

  &__mobile {
    display: none;

    @include mq($until: desktop) {
      display: block;
    }

    &-item {
      @include elevation-2;
      position: relative;
      border: $table-body-mobile-cell-border;
      border-radius: rem($border-radius);
      background-color: $table-head-background;
      display: flex;
      flex-wrap: wrap;

      &-key {
        font-size: rem($gutter-size);
        position: absolute;
        top: rem($gutter-size);
        right: rem($gutter-size);
        color: $grey-400;
      }

      &-title {
        padding: rem($gutter-size $gutter-size) calc(#{rem($gutter-size)} / 2);
        font-size: rem($table-body-font-size);
        width: 100%;
      }

      &-desc {
        padding: rem(0 $gutter-size $gutter-size);
        width: 100%;
      }

      &-desc:not(:last-child) {
        border-bottom: $table-body-mobile-cell-border;
      }

      &-child {
        padding: rem($gutter-size);
        width: 50%;

        &-title {
          display: block;
          font-size: rem($table-body-font-size);
          margin-bottom: rem(5px);
          color: $grey-400;
        }

        &:nth-child(even) {
          border-right: $table-body-mobile-cell-border;
        }

        &:last-child {
          border-right: unset;
          width: 100%;
        }
      }

      &-action {
        width: 100%;
        border-top: $table-body-mobile-cell-border;
        border-bottom-left-radius: $border-radius;
        border-bottom-right-radius: $border-radius;
        color: $white;
        display: flex;
        align-items: center;
        text-align: center;
        padding: rem($gutter-size 5px);

        > * {
          width: 100%;
          display: block;
        }

        > .flex {
          display: flex;
          width: 100%;
          align-items: center;
          justify-content: center;
        }
      }

      &:not(:last-child) {
        margin-bottom: rem($gutter-size);
      }
    }

    .ebs-button__wrapper {
      width: 100%;
      border-top-left-radius: 0;
      border-top-right-radius: 0;
    }

    .ebs-action__wrapper {
      @include flex-center;
      position: relative;
    }
  }

  .rc-table-content {
    border: 1px solid $border-color;
    overflow: auto hidden;
  }

  .rc-table-expanded-row {
    .rc-table-cell {
      box-shadow: none;
      padding: 0;

      .flex-item {
        border-bottom: none;
      }
    }
  }

  th,
  td {
    border-color: $border-color;
    border-right: none;
    padding: rem(22px 16px);
  }

  td {
    @include fontMedium;
    color: $text-color;

    a {
      color: var(--primary-color);
    }

    b,
    strong {
      @include fontBold;
    }

    .ebs-time__period-cell > div > .ebs-info {
      display: inline-block;
    }

    .ebs-time__period-cell > div > .ebs-info:not(:first-child) {
      padding-left: rem($table-body-font-size);

      .ebs-info__icon {
        display: none;
      }
    }

    .ebs-time__period-cell > div > .ebs-info:not(:last-child) {
      margin-right: rem($table-body-font-size);
    }
  }

  .rc-table-thead tr {
    &.rc-table-row-expand-icon-cell + th.rc-table-cell {
      padding-left: 0;
    }

    th.rc-table-cell {
      text-transform: uppercase;
      border: $table-head-cell-border;
      border-bottom: $table-head-cell-bottom-border;
      border-top: $table-border;
      position: relative;
      font-weight: $table-head-font-weight;
      text-align: $table-head-cell-text-align;
      background-color: $table-head-background;
      font-size: rem($table-head-font-size);
      color: $heading-color;
      word-break: normal;

      &.has-children {
        border: $table-border;
        border-right: none;
        border-top: none;

        + *:not(.has-children) {
          border-left: $table-border;
        }
      }
    }

    &:not(:last-child) th.rc-table-cell {
      border-right: none;
    }

    &:not(:last-child) th.rc-table-cell {
      border-right: none;
    }

    &:not(:first-child) th.rc-table-cell {
      border-left: $table-border;
    }
  }
}

.table-no-border {
  .rc-table-header,
  .rc-table-body,
  .rc-table-content {
    border: 0 !important;
  }

  .rc-table-tbody tr.rc-table-row:last-child td {
    border-bottom: 0 !important;
  }
}

@keyframes fadeModal {
  0% {
    opacity: 0;
  }
  25% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.ebs-modal__wrapper {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: auto;
  outline: 0;
  z-index: 9998;
}

.ebs-modal {
  @include elevation-4;
  position: relative;
  margin: rem(150px auto $gutter-size);
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  background-color: $background-content;
  animation: 250ms cubic-bezier(0.25, 0.1, 0.25, 1) 0s 1 normal forwards running fadeModal;

  &__size--small {
    width: 100%;
    max-width: rem(550px);
  }

  &__size--regular {
    width: 100%;
    max-width: rem(760px);
  }

  &__size--large {
    width: 100%;
    max-width: rem(960px);
  }

  &.hide-header &__content {
    padding: rem($base-size);
  }

  &__header {
    position: relative;
    padding: rem($gutter-size);
    border-bottom: 1px solid $border-color;
    background-color: $white;

    &-container {
      margin-right: calc(#{rem($base-size)} + #{rem($gutter-size)} / 2);
    }

    &--close {
      position: absolute;
      top: 50%;
      right: rem($gutter-size);
      transform: translate3d(0, -50%, 0);
      border-radius: rem($border-radius);
      color: $black;
    }
  }

  &__content {
    padding: rem($gutter-size);
  }

  &__title {
    font-size: rem(14px);
    @include fontMedium;
    margin: 0;
    padding: 0;
  }

  &__footer {
    padding: rem($gutter-size);
    border-top: 1px solid $border-color;
    background-color: $white;

    &__button {
      display: flex;
      justify-content: space-between;

      &--flex {
        display: flex;
        align-items: center;

        > * {
          display: block;
          white-space: nowrap;

          &:first-child {
            width: 100%;
          }

          &:last-child {
            width: auto;
          }

          > *:not(:first-child) {
            margin-left: rem($gutter-size);
          }
        }
      }

      &--center {
        text-align: center;

        .ebs-button__wrapper:last__child {
          margin-left: rem($gutter-size);
        }
      }

      > div:not(:first-child),
      > div:not(:first-child) > div:not(:first-child) {
        margin-left: rem($gutter-size);
      }
    }
  }
}

.ebs-layout {
  &__top-bar-mobile {
    display: none;
  }

  &__sidebar--untoggled.has-options {
    @media (min-width: 54.84714em) {
      .ebs-sidebar + .ebs-layout__container > .ebs-layout__content-wrapper,
      .ebs-sidebar + .ebs-layout__container + .ebs-layout__footer {
        width: calc(100% - 27.3936rem);
      }
    }

    @media (max-width: 54.84714em) {
      .ebs-sidebar.ebs-sidebar__mobile--closed {
        transform: translateX(-200%);
      }
    }
  }

  &__sidebar--toggled {
    .ebs-sidebar + .ebs-layout__container > .ebs-layout__content-wrapper,
    .ebs-sidebar + .ebs-layout__container + .ebs-layout__footer {
      // 57px
      width: calc(100% - 3.95224rem);
    }

    @media (max-width: 53.24124em) {
      .ebs-sidebar + .ebs-layout__container > .ebs-layout__content-wrapper,
      .ebs-sidebar + .ebs-layout__container + .ebs-layout__footer {
        width: 100%;
      }
    }

    &.has-options {
      @media (min-width: 53.24124em) {
        .ebs-sidebar + .ebs-layout__container > .ebs-layout__content-wrapper,
        .ebs-sidebar + .ebs-layout__container + .ebs-layout__footer {
          width: calc(100% - 17.75772rem);
        }
      }

      @media (max-width: 53.24124em) {
        .ebs-sidebar + .ebs-layout__container > .ebs-layout__content-wrapper,
        .ebs-sidebar + .ebs-layout__container + .ebs-layout__footer {
          width: 100%;
        }

        .ebs-sidebar.ebs-sidebar__mobile--closed {
          transform: translateX(-500%);
        }
      }

      .ebs-sidebar__item {
        border-right: none;
      }
    }
  }

  .ebs-sidebar + &__container > &__content-wrapper,
  .ebs-sidebar + &__container &__footer {
    transition: width $transition-time;
    margin-left: auto;

    // 191px
    width: calc(100% - #{rem($sidebar-width)});
  }

  &__top-bar + &__container > &__content-wrapper {
    position: relative;
    min-height: calc(100% - #{$layout-top-bar-height});
  }

  &__content {
    width: 100%;
    background-color: $layout-content-background;
    height: calc(100vh - #{$layout-top-bar-height * 2});
    margin: 0 auto;
    padding: rem(15px 25px);

    .ebs-breadcrumbs__wrapper {
      margin-bottom: rem(20px);

      + .ebs-card .ebs-card__header {
        padding-top: 0;
      }
    }
  }

  &__content.ebs-layout--has-footer {
    padding-bottom: rem($layout-footer-height);
  }

  &__top-bar + &__container,
  &__top-bar + .ebs-sidebar + &__container {
    height: calc(100vh - #{rem($layout-top-bar-height)});
    overflow: hidden auto;
  }

  &__container--has-fixed-footer &__content-wrapper {
    padding-bottom: rem($layout-footer-height);
  }

  &__container &__content {
    height: 100%;
  }

  &__footer {
    background-color: $layout-footer-background;
    height: rem($layout-footer-height);
    display: flex;
    align-items: center;
    color: $grey-300;

    &--fixed {
      border-top: $layout-footer-fixed-border;
      background: $white;
      position: fixed;
      bottom: 0;
      right: 0;
    }

    span {
      @include fontRegular;
      display: block;
      margin: 0 auto;
    }
  }

  &__top-bar + .ebs-sidebar {
    @include flex-column;
    margin-top: rem($layout-top-bar-height);
    height: calc(100vh - #{rem($layout-top-bar-height)});

    @include mq($until: small-desktop) {
      margin-top: 0;
      height: 100vh;
    }

    &--toggled .ebs-label {
      @include text-ellipsis;
      padding: rem(0 calc(#{$gutter-size} / 3));
    }
  }

  @include mq($until: small-desktop) {
    &__content-wrapper,
    &__footer {
      width: 100% !important;
    }

    &__top-bar {
      padding-left: 0;

      &-mobile {
        display: flex;
        align-items: center;

        &--toggler {
          cursor: pointer;
          position: relative;
          height: rem($layout-top-bar-height);
          width: rem($layout-top-bar-height);
          border-right: 1px solid $layout-top-bar-toggler-border-color;

          &:hover {
            background-color: var(--primary-000);

            .ebs-icon {
              color: $layout-top-bar-toggler-hover-color;
            }
          }

          .ebs-icon {
            position: absolute;
            left: 50%;
            top: 50%;
            color: $layout-top-bar-toggler-color;
            transform: translate(-50%, -50%);
          }
        }
      }
    }

    &__top-bar-title {
      display: none;
    }
  }
}

.ebs-layout__top-bar-top,
.ebs-layout__top-bar-bottom,
.ebs-layout__footer-bar-top,
.ebs-layout__footer-bar-bottom {
  user-select: none;
}

.ebs-layout__top-bar {
  height: rem($layout-top-bar-height);
  display: flex;
  align-items: center;
  transition: width $transition-time;
  width: 100%;
  padding: rem($gutter-size 24px);
  border-bottom: $layout-top-bar-border-color;
  background-color: $layout-top-bar-background;

  &.fixed {
    position: fixed;
    right: 0;
    top: 0;
    z-index: 3;

    + .ebs-sidebar + .ebs-layout__content-wrapper {
      padding-top: rem($layout-top-bar-height);
    }
  }

  &-title {
    cursor: pointer;
    font-size: rem(14px);
    @include fontBold;
    min-width: rem($sidebar-width - $gutter-size);

    img {
      max-width: rem($sidebar-logo-width);
    }

    svg:first-child {
      font-size: rem($sidebar-logo-width);
    }

    &::after {
      content: '';
      width: 1px;
      height: rem($layout-top-bar-height);
      border-right: 1px solid $layout-top-bar-toggler-border-color;
      position: absolute;
      top: 0;
      left: rem($sidebar-width - 1px);
    }
  }

  &-left {
    width: 100%;
    margin-left: rem($layout-top-bar-side-left-margin-left);
  }

  &-left ~ &-title {
    width: auto;
  }

  &-left,
  &-right {
    display: flex;
    align-items: center;
    white-space: nowrap;
  }

  &-right {
    margin-left: rem($layout-top-bar-side-right-margin-left);
    width: 100%;
    justify-content: flex-end;

    > *:not(:first-child) {
      margin-left: rem($base-size);
    }

    &-item {
      display: flex;
      align-items: center;
      margin-left: rem($gutter-size);

      > *:not(:first-child) {
        margin-left: rem($gutter-size);
      }
    }
  }
}

.ebs-sidebar {
  &__text {
    color: $sidebar-item-text-color;
    font-size: rem(14px);
    transition: $transition-time;
    padding: rem($gutter-size 27.5px $gutter-size 57.5px);

    a {
      padding: rem($gutter-size 27.5px $gutter-size 57.5px);
    }
  }

  &:not(.ebs-sidebar--toggled) &__item--collapsed.has-options {
    background-color: rgba($sidebar-item-hover-background, 0.1);

    .ebs-sidebar__text,
    a,
    svg,
    & + .ebs-sidebar__suffix svg {
      color: $sidebar-item-text-color;
    }
  }

  &__item {
    @include text-ellipsis;
    position: relative;
    cursor: pointer;
    transition: $transition-time;
    display: flex;
    align-items: center;
    color: $sidebar-item-text-color;
    max-height: rem(44px);

    &__options &__item .ebs-sidebar__text {
      font-size: rem(12px);
      color: $sidebar-item-text-color;
    }

    &:hover,
    &--invert:hover,
    &--invert .ebs-sidebar__item--active:hover {
      & + .ebs-sidebar__suffix .ebs-icon {
        color: $sidebar-item-hover-color;
      }
    }

    .ebs-icon {
      color: $sidebar-item-text-color;
    }

    &.ebs-sidebar__toggler {
      margin-bottom: rem(10px);

      @include mq($until: small-desktop) {
        display: none;
      }
    }

    // item has no options
    &--invert:not(.has-options):hover,
    &--invert .ebs-sidebar__item--active:not(.has-options) {
      background-color: $sidebar-item-hover-background;
      color: $sidebar-item-hover-color;

      .ebs-sidebar__text,
      .ebs-icon {
        color: $sidebar-item-hover-color;
      }
    }

    &:hover:not(.has-options),
    &--active:not(.has-options) {
      background-color: $sidebar-item-hover-background;
      color: $sidebar-item-hover-color;

      .ebs-sidebar__text,
      .ebs-icon {
        color: $sidebar-item-hover-color;
      }
    }

    // item has options
    &--invert.has-options:hover,
    &--invert.has-options.ebs-sidebar__item--active:not(.has-options) {
      background-color: $sidebar-item-hover-background;
      color: $sidebar-item-hover-color;

      .ebs-sidebar__text,
      .ebs-icon {
        color: $sidebar-item-hover-color;
      }
    }

    &.has-options:hover,
    &--active.has-options:not(.has-options) {
      background-color: $sidebar-item-hover-background;
      color: $sidebar-item-hover-color;

      .ebs-sidebar__text,
      .ebs-icon {
        color: $sidebar-item-hover-color;
      }
    }
  }

  &__prefix .ebs-icon {
    position: absolute;
    left: rem(20px);
    top: 50%;
    transform: translateY(-50%);
    font-size: rem(18px);
  }

  &__suffix {
    .ebs-icon {
      position: absolute;
      right: rem(12px);
      top: calc(50% - 4px);
      font-size: rem(10px);
      transition: $transition-time;

      path {
        transition: $transition-time;
      }

      &.ebs-icon__left {
        transform: rotate(270deg) translateY(-50%);
      }

      &.ebs-icon__bottom {
        transform: rotate(180deg) translateY(-50%);
      }
    }
  }

  &__label.ebs-label__status-text {
    padding: rem(12px 16px 6px);
    margin: 0;
    color: $sidebar-item-text-color;
  }

  &__options &__text {
    padding-top: rem(5px);
    padding-bottom: rem(5px);
    padding-right: rem(10px);

    &:hover,
    &--active,
    &--invert:hover,
    &--invert.ebs-sidebar__item--active:hover {
      background-color: rgba($sidebar-item-hover-background, 0.7);

      .ebs-sidebar__text {
        color: $sidebar-item-hover-color;
      }
    }
  }

  &__options &__item &__prefix {
    display: none;
  }
}

.ebs-optionsbar {
  position: absolute;
  top: 0;
  width: rem($sidebar-width);
  height: 100%;
  background-color: $grey-50;
  border-right: 1px solid $border-color;
  transition: $transition-time;
}

.ebs-optionsbar__item {
  cursor: pointer;
  padding: rem(14px 16px);
  font-size: rem(14px);
  color: $text-color;
  transition: all $transition-time;

  &.disabled,
  &.disabled:hover {
    cursor: not-allowed;
    color: $grey-300;
    background-color: transparent;
  }

  @include hover-state {
    background-color: var(--primary-000);
    color: var(--primary-color);
  }
}


.ebs-sidebar {
  position: absolute;
  left: 0;
  top: 0;
  width: rem($sidebar-width);
  height: 100%;
  border-right: $sidebar-border;
  transition: width $transition-time;
  background-color: $sidebar-background;
  z-index: 5;

  @include mq($until: small-desktop) {
    padding-top: rem(80px);

    &__mobile--closed,
    &__mobile--opened {
      transition: $transition-time;
      padding-top: 0;
    }

    &__mobile--closed {
      transform: translateX(-100%);
    }

    &__mobile--opened {
      width: rem($sidebar-width);
      transform: translateX(0);
    }
  }

  &--toggled &__item.has-options + div {
    position: absolute;
    top: 0;
  }

  &__top {
    height: 100%;
    margin-top: rem(5px);
    overflow: hidden auto;
  }

  &__text {
    @include text-ellipsis;
  }

  &--untoggled &__options {
    left: rem($sidebar-width);
  }

  &--toggled {
    width: rem(57px);

    @media (min-width: 54.84714em) {
      + .ebs-layout__content-wrapper {
        width: calc(100% - 4.38462rem);
      }
    }

    .ebs-sidebar__label {
      animation: fadeOut 0.1s;
      white-space: nowrap;
    }

    .ebs-sidebar__item {
      padding-right: 0;

      .ebs-sidebar__text {
        animation: fadeOut 0.1s;
      }
    }

    .ebs-sidebar__suffix .ebs-icon {
      right: calc(#{rem($gutter-size)} / 2);
    }

    .ebs-sidebar__options {
      position: absolute;
      top: 0;
      left: rem(57px);
    }

    .ebs-sidebar__options .ebs-sidebar__item:hover,
    .ebs-sidebar__options .ebs-sidebar__item.ebs-sidebar__item--active,
    .ebs-sidebar__options .ebs-sidebar__item.ebs-sidebar__item--invert:hover,
    .ebs-sidebar__options
      .ebs-sidebar__item.ebs-sidebar__item--invert
      .ebs-sidebar__item.ebs-sidebar__item--active:hover {
      background-color: var(--primary-color);
    }
  }

  &--toggled &__item {
    z-index: 3;
  }

  &--toggled &__item.has-options {
    padding-right: 0;
  }

  &--toggled &__item--active + .rah-static &__options &__item {
    opacity: 1;
    left: rem($layout-top-bar-height - 1);
    transition: all $transition-time;
  }

  &__mask {
    position: absolute;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba($black, 0.5);
    z-index: 4;
    animation: fadeIn 0.3s forwards;
  }

  &__bottom {
    position: sticky;
    bottom: 0;
    background-color: $sidebar-bottom-background;
    width: 100%;
    padding-bottom: rem(20px);
    overflow: hidden;

    @include mq($until: small-desktop) {
      padding-bottom: rem(120px);
    }
  }

  &__suffix,
  &__prefix {
    pointer-events: none;
  }
}

.ebs-sort-by__tooltip {
  padding: 0;
  border: 1px solid $border-color;
  border-radius: rem($border-radius);
  width: rem(162.5px);
  max-height: rem($sort-by-tooltip-height);
  overflow: hidden auto;

  &-title {
    @include fontMedium;
    font-size: rem(11px);
    padding: rem(12.5px);
    border-bottom: 1px solid $border-color;
    color: #3c3939;
  }

  &-items &-item {
    @include fontMedium;
    @include text-ellipsis;
    position: relative;
    padding: rem(12.5px);
    font-size: rem(12px);
    cursor: pointer;
    transition: 0.2s;

    &--active {
      @include fontBold;
      color: var(--primary-color);
    }

    &:hover {
      background-color: #f4f3f2;
      color: var(--primary-300);
    }

    &:not(:last-child) {
      border-bottom: 1px solid $border-color;
    }

    .ebs-icon {
      position: absolute;
      right: rem(10px);
      top: 50%;
      transform: translateY(-50%);
    }
  }
}

.ebs-sort-by__wrapper {
  position: relative;
  display: flex;

  > .ebs-button__wrapper {
    border-right: none;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  &.ebs-sort-asc > .ebs-button__wrapper .ebs-icon {
    transform: rotate(180deg);
  }

  .ebs-tooltip__trigger > .ebs-button__wrapper {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  .ebs-button__wrapper {
    .ebs-icon {
      transition: 300ms transform;
    }
  }

  .ebs-button--ghost .ebs-button {
    color: $sort-by-text-color;

    .ebs-icon {
      color: $sort-by-icon-color;
    }

    &:hover {
      color: $sort-by-text-hover-color;

      .ebs-icon {
        color: $sort-by-icon-hover-color;
      }
    }
  }
}


